/**
 * This class is generated by jOOQ
 */
package services.generated.tables


import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.ForeignKey
import org.jooq.Identity
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl

import services.generated.Keys
import services.generated.Public
import services.generated.tables.records.FeatureToggleRecord


object FeatureToggle {

	/**
	 * The reference instance of <code>public.feature_toggle</code>
	 */
	val FEATURE_TOGGLE = new FeatureToggle
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class FeatureToggle(alias : String, aliased : Table[FeatureToggleRecord], parameters : Array[ Field[_] ]) extends TableImpl[FeatureToggleRecord](alias, Public.PUBLIC, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[FeatureToggleRecord] = {
		classOf[FeatureToggleRecord]
	}

	/**
	 * The column <code>public.feature_toggle.id</code>.
	 */
	val ID : TableField[FeatureToggleRecord, Integer] = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), "")

	/**
	 * The column <code>public.feature_toggle.username</code>.
	 */
	val USERNAME : TableField[FeatureToggleRecord, String] = createField("username", org.jooq.impl.SQLDataType.CLOB.nullable(false), "")

	/**
	 * The column <code>public.feature_toggle.has_toggle</code>.
	 */
	val HAS_TOGGLE : TableField[FeatureToggleRecord, String] = createField("has_toggle", org.jooq.impl.SQLDataType.CLOB.nullable(false), "")

	/**
	 * Create a <code>public.feature_toggle</code> table reference
	 */
	def this() = {
		this("feature_toggle", null, null)
	}

	/**
	 * Create an aliased <code>public.feature_toggle</code> table reference
	 */
	def this(alias : String) = {
		this(alias, services.generated.tables.FeatureToggle.FEATURE_TOGGLE, null)
	}

	private def this(alias : String, aliased : Table[FeatureToggleRecord]) = {
		this(alias, aliased, null)
	}

	override def getIdentity : Identity[FeatureToggleRecord, Integer] = {
		Keys.IDENTITY_FEATURE_TOGGLE
	}

	override def getPrimaryKey : UniqueKey[FeatureToggleRecord] = {
		Keys.FEATURE_TOGGLE_PKEY
	}

	override def getKeys : List[ UniqueKey[FeatureToggleRecord] ] = {
		return Arrays.asList[ UniqueKey[FeatureToggleRecord] ](Keys.FEATURE_TOGGLE_PKEY)
	}

	override def getReferences : List[ ForeignKey[FeatureToggleRecord, _] ] = {
		return Arrays.asList[ ForeignKey[FeatureToggleRecord, _] ](Keys.FEATURE_TOGGLE__FEATURE_TOGGLE_USERNAME_FKEY)
	}

	override def as(alias : String) : FeatureToggle = {
		new FeatureToggle(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : FeatureToggle = {
		new FeatureToggle(name, null)
	}
}
