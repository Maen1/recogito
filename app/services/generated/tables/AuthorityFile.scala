/**
 * This class is generated by jOOQ
 */
package services.generated.tables


import java.lang.Class
import java.lang.String
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl

import services.generated.Keys
import services.generated.Public
import services.generated.tables.records.AuthorityFileRecord


object AuthorityFile {

	/**
	 * The reference instance of <code>public.authority_file</code>
	 */
	val AUTHORITY_FILE = new AuthorityFile
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class AuthorityFile(alias : String, aliased : Table[AuthorityFileRecord], parameters : Array[ Field[_] ]) extends TableImpl[AuthorityFileRecord](alias, Public.PUBLIC, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[AuthorityFileRecord] = {
		classOf[AuthorityFileRecord]
	}

	/**
	 * The column <code>public.authority_file.id</code>.
	 */
	val ID : TableField[AuthorityFileRecord, String] = createField("id", org.jooq.impl.SQLDataType.CLOB.nullable(false), "")

	/**
	 * The column <code>public.authority_file.shortname</code>.
	 */
	val SHORTNAME : TableField[AuthorityFileRecord, String] = createField("shortname", org.jooq.impl.SQLDataType.CLOB.nullable(false), "")

	/**
	 * The column <code>public.authority_file.fullname</code>.
	 */
	val FULLNAME : TableField[AuthorityFileRecord, String] = createField("fullname", org.jooq.impl.SQLDataType.CLOB, "")

	/**
	 * The column <code>public.authority_file.shortcode</code>.
	 */
	val SHORTCODE : TableField[AuthorityFileRecord, String] = createField("shortcode", org.jooq.impl.SQLDataType.CLOB, "")

	/**
	 * The column <code>public.authority_file.color</code>.
	 */
	val COLOR : TableField[AuthorityFileRecord, String] = createField("color", org.jooq.impl.SQLDataType.CLOB, "")

	/**
	 * The column <code>public.authority_file.url_patterns</code>.
	 */
	val URL_PATTERNS : TableField[AuthorityFileRecord, String] = createField("url_patterns", org.jooq.impl.SQLDataType.CLOB, "")

	/**
	 * Create a <code>public.authority_file</code> table reference
	 */
	def this() = {
		this("authority_file", null, null)
	}

	/**
	 * Create an aliased <code>public.authority_file</code> table reference
	 */
	def this(alias : String) = {
		this(alias, services.generated.tables.AuthorityFile.AUTHORITY_FILE, null)
	}

	private def this(alias : String, aliased : Table[AuthorityFileRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[AuthorityFileRecord] = {
		Keys.AUTHORITY_FILE_PKEY
	}

	override def getKeys : List[ UniqueKey[AuthorityFileRecord] ] = {
		return Arrays.asList[ UniqueKey[AuthorityFileRecord] ](Keys.AUTHORITY_FILE_PKEY)
	}

	override def as(alias : String) : AuthorityFile = {
		new AuthorityFile(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : AuthorityFile = {
		new AuthorityFile(name, null)
	}
}
