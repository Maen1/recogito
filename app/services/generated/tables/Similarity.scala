/**
 * This class is generated by jOOQ
 */
package services.generated.tables


import java.lang.Class
import java.lang.Double
import java.lang.String
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl

import services.generated.Keys
import services.generated.Public
import services.generated.tables.records.SimilarityRecord


object Similarity {

	/**
	 * The reference instance of <code>public.similarity</code>
	 */
	val SIMILARITY = new Similarity
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class Similarity(alias : String, aliased : Table[SimilarityRecord], parameters : Array[ Field[_] ]) extends TableImpl[SimilarityRecord](alias, Public.PUBLIC, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[SimilarityRecord] = {
		classOf[SimilarityRecord]
	}

	/**
	 * The column <code>public.similarity.doc_id_a</code>.
	 */
	val DOC_ID_A : TableField[SimilarityRecord, String] = createField("doc_id_a", org.jooq.impl.SQLDataType.CLOB.nullable(false), "")

	/**
	 * The column <code>public.similarity.doc_id_b</code>.
	 */
	val DOC_ID_B : TableField[SimilarityRecord, String] = createField("doc_id_b", org.jooq.impl.SQLDataType.CLOB.nullable(false), "")

	/**
	 * The column <code>public.similarity.title_jaro_winkler</code>.
	 */
	val TITLE_JARO_WINKLER : TableField[SimilarityRecord, Double] = createField("title_jaro_winkler", org.jooq.impl.SQLDataType.DOUBLE, "")

	/**
	 * The column <code>public.similarity.entity_jaccard</code>.
	 */
	val ENTITY_JACCARD : TableField[SimilarityRecord, Double] = createField("entity_jaccard", org.jooq.impl.SQLDataType.DOUBLE, "")

	/**
	 * Create a <code>public.similarity</code> table reference
	 */
	def this() = {
		this("similarity", null, null)
	}

	/**
	 * Create an aliased <code>public.similarity</code> table reference
	 */
	def this(alias : String) = {
		this(alias, services.generated.tables.Similarity.SIMILARITY, null)
	}

	private def this(alias : String, aliased : Table[SimilarityRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[SimilarityRecord] = {
		Keys.SIMILARITY_PKEY
	}

	override def getKeys : List[ UniqueKey[SimilarityRecord] ] = {
		return Arrays.asList[ UniqueKey[SimilarityRecord] ](Keys.SIMILARITY_PKEY)
	}

	override def as(alias : String) : Similarity = {
		new Similarity(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : Similarity = {
		new Similarity(name, null)
	}
}
