/**
 * This class is generated by jOOQ
 */
package services.generated.tables.records


import java.lang.Integer
import java.lang.String

import javax.annotation.Generated

import services.generated.tables.FolderAssociation

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class FolderAssociationRecord extends TableRecordImpl[FolderAssociationRecord](FolderAssociation.FOLDER_ASSOCIATION) with Record2[Integer, String] {

	/**
	 * Setter for <code>public.folder_association.folder_id</code>.
	 */
	def setFolderId(value : Integer) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>public.folder_association.folder_id</code>.
	 */
	def getFolderId : Integer = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[Integer]
	}

	/**
	 * Setter for <code>public.folder_association.document_id</code>.
	 */
	def setDocumentId(value : String) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>public.folder_association.document_id</code>.
	 */
	def getDocumentId : String = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[String]
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row2[Integer, String] = {
		super.fieldsRow.asInstanceOf[ Row2[Integer, String] ]
	}

	override def valuesRow : Row2[Integer, String] = {
		super.valuesRow.asInstanceOf[ Row2[Integer, String] ]
	}
	override def field1 : Field[Integer] = FolderAssociation.FOLDER_ASSOCIATION.FOLDER_ID
	override def field2 : Field[String] = FolderAssociation.FOLDER_ASSOCIATION.DOCUMENT_ID
	override def value1 : Integer = getFolderId
	override def value2 : String = getDocumentId

	override def value1(value : Integer) : FolderAssociationRecord = {
		setFolderId(value)
		this
	}

	override def value2(value : String) : FolderAssociationRecord = {
		setDocumentId(value)
		this
	}

	override def values(value1 : Integer, value2 : String) : FolderAssociationRecord = {
		this.value1(value1)
		this.value2(value2)
		this
	}

	/**
	 * Create a detached, initialised FolderAssociationRecord
	 */
	def this(folderId : Integer, documentId : String) = {
		this()

		setValue(0, folderId)
		setValue(1, documentId)
	}
}
