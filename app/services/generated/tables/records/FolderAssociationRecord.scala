/**
 * This class is generated by jOOQ
 */
package services.generated.tables.records


import java.lang.String
import java.util.UUID

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.UpdatableRecordImpl

import services.generated.tables.FolderAssociation


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class FolderAssociationRecord extends UpdatableRecordImpl[FolderAssociationRecord](FolderAssociation.FOLDER_ASSOCIATION) with Record2[UUID, String] {

	/**
	 * Setter for <code>public.folder_association.folder_id</code>.
	 */
	def setFolderId(value : UUID) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>public.folder_association.folder_id</code>.
	 */
	def getFolderId : UUID = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[UUID]
	}

	/**
	 * Setter for <code>public.folder_association.document_id</code>.
	 */
	def setDocumentId(value : String) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>public.folder_association.document_id</code>.
	 */
	def getDocumentId : String = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[String]
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------
	override def key() : Record2[UUID, String] = {
		return super.key.asInstanceOf[ Record2[UUID, String] ]
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row2[UUID, String] = {
		super.fieldsRow.asInstanceOf[ Row2[UUID, String] ]
	}

	override def valuesRow : Row2[UUID, String] = {
		super.valuesRow.asInstanceOf[ Row2[UUID, String] ]
	}
	override def field1 : Field[UUID] = FolderAssociation.FOLDER_ASSOCIATION.FOLDER_ID
	override def field2 : Field[String] = FolderAssociation.FOLDER_ASSOCIATION.DOCUMENT_ID
	override def value1 : UUID = getFolderId
	override def value2 : String = getDocumentId

	override def value1(value : UUID) : FolderAssociationRecord = {
		setFolderId(value)
		this
	}

	override def value2(value : String) : FolderAssociationRecord = {
		setDocumentId(value)
		this
	}

	override def values(value1 : UUID, value2 : String) : FolderAssociationRecord = {
		this.value1(value1)
		this.value2(value2)
		this
	}

	/**
	 * Create a detached, initialised FolderAssociationRecord
	 */
	def this(folderId : UUID, documentId : String) = {
		this()

		setValue(0, folderId)
		setValue(1, documentId)
	}
}
