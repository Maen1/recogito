/**
 * This class is generated by jOOQ
 */
package services.generated.tables


import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.sql.Timestamp
import java.util.Arrays
import java.util.List
import java.util.UUID

import javax.annotation.Generated

import services.generated.Keys
import services.generated.Public
import services.generated.tables.records.TaskRecord

import org.jooq.Field
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl


object Task {

	/**
	 * The reference instance of <code>public.task</code>
	 */
	val TASK = new Task
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class Task(alias : String, aliased : Table[TaskRecord], parameters : Array[ Field[_] ]) extends TableImpl[TaskRecord](alias, Public.PUBLIC, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[TaskRecord] = {
		classOf[TaskRecord]
	}

	/**
	 * The column <code>public.task.id</code>.
	 */
	val ID : TableField[TaskRecord, UUID] = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), "")

	/**
	 * The column <code>public.task.task_type</code>.
	 */
	val TASK_TYPE : TableField[TaskRecord, String] = createField("task_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), "")

	/**
	 * The column <code>public.task.class_name</code>.
	 */
	val CLASS_NAME : TableField[TaskRecord, String] = createField("class_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), "")

	/**
	 * The column <code>public.task.document_id</code>.
	 */
	val DOCUMENT_ID : TableField[TaskRecord, String] = createField("document_id", org.jooq.impl.SQLDataType.CLOB, "")

	/**
	 * The column <code>public.task.filepart_id</code>.
	 */
	val FILEPART_ID : TableField[TaskRecord, UUID] = createField("filepart_id", org.jooq.impl.SQLDataType.UUID, "")

	/**
	 * The column <code>public.task.spawned_by</code>.
	 */
	val SPAWNED_BY : TableField[TaskRecord, String] = createField("spawned_by", org.jooq.impl.SQLDataType.CLOB, "")

	/**
	 * The column <code>public.task.spawned_at</code>.
	 */
	val SPAWNED_AT : TableField[TaskRecord, Timestamp] = createField("spawned_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), "")

	/**
	 * The column <code>public.task.stopped_at</code>.
	 */
	val STOPPED_AT : TableField[TaskRecord, Timestamp] = createField("stopped_at", org.jooq.impl.SQLDataType.TIMESTAMP, "")

	/**
	 * The column <code>public.task.stopped_with</code>.
	 */
	val STOPPED_WITH : TableField[TaskRecord, String] = createField("stopped_with", org.jooq.impl.SQLDataType.CLOB, "")

	/**
	 * The column <code>public.task.status</code>.
	 */
	val STATUS : TableField[TaskRecord, String] = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false).defaulted(true), "")

	/**
	 * The column <code>public.task.progress</code>.
	 */
	val PROGRESS : TableField[TaskRecord, Integer] = createField("progress", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

	/**
	 * Create a <code>public.task</code> table reference
	 */
	def this() = {
		this("task", null, null)
	}

	/**
	 * Create an aliased <code>public.task</code> table reference
	 */
	def this(alias : String) = {
		this(alias, services.generated.tables.Task.TASK, null)
	}

	private def this(alias : String, aliased : Table[TaskRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[TaskRecord] = {
		Keys.TASK_PKEY
	}

	override def getKeys : List[ UniqueKey[TaskRecord] ] = {
		return Arrays.asList[ UniqueKey[TaskRecord] ](Keys.TASK_PKEY)
	}

	override def as(alias : String) : Task = {
		new Task(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : Task = {
		new Task(name, null)
	}
}
