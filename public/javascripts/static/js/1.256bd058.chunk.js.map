{"version":3,"sources":["common/content/upload/DropzoneDecoration.jsx","common/content/Breadcrumbs.jsx","common/content/activity/ActivityWidget.jsx","common/content/profile/CollaboratorList.jsx","common/content/profile/Avatar.jsx","common/content/profile/ProfileInfo.jsx","common/content/table/rows/BaseRowComponent.jsx","common/content/table/rows/HeaderRow.jsx","common/content/table/rows/DocumentRow.jsx","common/content/table/rows/FolderRow.jsx","common/components/Modal.jsx","common/content/table/preferences/ColumnOrder.jsx","common/content/table/preferences/PreferencesModal.jsx","common/content/table/TablePane.jsx","common/content/grid/Folder.jsx","common/content/grid/Document.jsx","common/content/grid/GridPane.jsx","common/content/table/Columns.js","common/StoredUIState.js","common/content/Readme.jsx","common/content/Selection.js","common/content/HeaderIcon.jsx"],"names":["AnimatedDiv","posed","div","open","bottom","transition","ease","duration","closed","DropzoneDecoration","props","_this","Object","_home_simonr_Workspaces_pelagios_recogito2_workspace_frontend_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_simonr_Workspaces_pelagios_recogito2_workspace_frontend_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_simonr_Workspaces_pelagios_recogito2_workspace_frontend_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","visible","setState","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","pose","Component","VIEW_LABELS","MY_DOCUMENTS","SHARED_WITH_ME","Breadcrumbs","title","view","label","count","concat","LINE_STYLE","stroke","strokeWidth","AXIS_STYLE","fontSize","color","tickFormatter","tick","Intl","DateTimeFormat","month","format","Date","ActivityWidget","n","toTimestamp","empty","Array","fill","reduce","arr","_","last","length","push","reverse","map","timestamp","value","t","toTime","getTime","createEmptySeries","timeseries","stats","over_time","parse","date","padTimeseries","react_number_format__WEBPACK_IMPORTED_MODULE_10___default","displayType","total_contributions","thousandSeparator","recharts__WEBPACK_IMPORTED_MODULE_6__","width","height","barCategoryGap","data","computeChart","recharts__WEBPACK_IMPORTED_MODULE_7__","strokeDasharray","horizontal","recharts__WEBPACK_IMPORTED_MODULE_8__","type","dataKey","axisLine","tickSize","tickCount","tickLine","domain","padding","left","right","recharts__WEBPACK_IMPORTED_MODULE_9__","CollaboratorList","collaborators","fetchCollaborators","_this2","username","axios","get","then","result","Fragment","user","key","href","_Avatar_jsx__WEBPACK_IMPORTED_MODULE_7__","Avatar","str","hash","i","charCodeAt","stringToHslColor","style","backgroundColor","charAt","toUpperCase","Identity","url","replace","dataAvailable","account","member_since","_Avatar_jsx__WEBPACK_IMPORTED_MODULE_6__","real_name","year","day","bio","website","formatURL","BaseRowComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateTotalRowSpan","next","_totalSpan","columns","total","field","Columns","getSpan","HeaderRow","react_default","prototype","onClick","onSort","bind","HEADER_NAMES","sortColumn","sortAsc","ICONS","TEXT_PLAIN","TEXT_TEIXML","IMAGE_UPLOAD","IMAGE_IIIF","DATA_CSV","FORMATTERS","language","uploaded_at","datetime","last_edit_at","lib_default","public_visibility","visibility","access_level","level","annotations","number_format_default","status_ratio","ratio","verified","unverified","not_identifiable","pctGreen","pctYellow","labels","tooltip","slice","AGGREGATE_FIELDS","agg_document","item","author","DocumentRow","substring","formatter","undefined","filetypes","id","selected","startsWith","createAggregateField","createField","src","alt","FolderRow","name","Modal","react_draggable_default","handle","onClose","children","SortableItem","SortableElement","_ref","SortableList","SortableContainer","_ref2","items","idx","index","ColumnOrder","onSortEnd","e","oldIndex","newIndex","PreferencesModal","states","COLUMNS","forEach","isChecked","includes","checked","_this3","toAppend","filter","checkAll","setAllRows","prev","indexOf","splice","arrayMove","_this4","Modal_Modal","onCancel","onClickAll","onChange","toggleOne","htmlFor","ColumnOrder_ColumnOrder","onSave","TablePane","prefsOpen","filterByView","selection","Selection","folders","documents","evt","isShift","getModifierState","isCtrl","selectRange","selectItem","onSelect","getSelectedItems","preventDefault","allItems","args","FolderRow_FolderRow","DocumentRow_DocumentRow","onChangeColumnPrefs","asc","sorting","by","active","drag","files","dataTransfer","getData","hostname","document","onDropFiles","window","location","onDropURL","readme","React","Children","toArray","c","Readme","shift","tablePane","es","rowCount","rowHeight","rowRenderer","busy","HeaderRow_HeaderRow","sortBy","showPreferences","disableFiledrop","dist_es","disableClick","onDragEnter","onDrag","onDragLeave","onDrop","PreferencesModal_PreferencesModal","onSavePreferences","Folder","Document","isStacked","fileCount","onDoubleClick","GridPane","itemsPerRow","fromIndex","itemsInRow","Math","min","renderedItems","rowIdx","Folder_Folder","Document_Document","file_count","gridPane","itemCount","floor","ceil","COLUMNS_SHARED_WITH_ME","date_freeform","last_edit_by","activity","owner","shared_by","COLUMN_WIDTH","AGGREGATE_COLUMNS","_home_simonr_Workspaces_pelagios_recogito2_workspace_frontend_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","w","StoredUIState","localStorage","getItem","JSON","prefixed","setItem","stringify","_allItems","_selection","isCtrlPressed","thisIdx","toIdx","selectedIndices","minIdx","apply","maxIdx","max","isOutside","from","to","HeaderIcon","link","icon"],"mappings":"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","file":"static/js/1.256bd058.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport posed from 'react-pose';\n\nconst AnimatedDiv = posed.div({\n  open:   { \n    bottom: '30px',\n    transition: {\n      ease: 'easeOut',\n      duration:200\n    }\n  },\n  closed: { bottom: '-140px' }\n});\n\nexport default class DropzoneDecoration extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { visible: false };\n  }\n\n  componentDidMount() {\n    this.setState({ visible: true });\n  }\n\n  render() {\n    return (\n      <div className=\"dropzone-decoration\">\n        <AnimatedDiv className=\"inner\" pose={this.state.visible ? 'open' : 'closed'}>\n          <span className=\"icon\">&#xf0ee;</span>\n          <p className=\"instructions\">\n            Drop files or IIIF manifest URLs to add them to your workspace.\n          </p>\n          <p className=\"supported\">\n            Supported formats: plain text (UTF-8), TEI/XML, image files, CSV (UTF-8)\n          </p>\n        </AnimatedDiv>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nconst VIEW_LABELS = {\n  MY_DOCUMENTS: 'My Documents',\n  SHARED_WITH_ME: 'Shared with me'\n}\n\nexport default class Breadcrumbs extends Component {\n\n  render() {\n    const title = this.props.view ? VIEW_LABELS[this.props.view] : this.props.label;\n\n    return (\n      <div className=\"breadcrumbs\">\n        <h2>{title} {this.props.count !== null &&\n          <span className=\"count\">{`(${this.props.count})`}</span>\n        }\n        </h2>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { Bar, BarChart, CartesianGrid, XAxis } from 'recharts';\nimport NumberFormat from 'react-number-format';\n\nconst LINE_STYLE = {\n  stroke: '#c2c2c2', \n  strokeWidth:1\n}\n\nconst AXIS_STYLE = {\n  fontSize:\"12px\",\n  color:\"#3f3f3f\"\n}\n\nconst WEEK = 3600000 * 24 * 7; // A week in milliseconds\n\nconst tickFormatter = (tick) => new Intl.DateTimeFormat('en-GB', {\n  month: 'short'\n}).format(new Date(tick));\n\nexport default class ActivityWidget extends Component {\n\n  /** Helper that generates an empty time series of N buckets with value 0 */\n  createEmptySeries(n, toTimestamp) {\n    const empty = new Array(n);\n    empty.fill(0); // Needs to contain *something* for .reduce to work\n\n    const timestamps = empty.reduce((arr, _) => {\n      const last = arr[arr.length - 1];\n      arr.push(last - WEEK);\n      return arr;\n    }, [ toTimestamp - WEEK ]).reverse();\n\n    return timestamps.map(timestamp => {\n      return { timestamp: timestamp, value: 0 };\n    });\n  }\n\n  padTimeseries(t) {\n    const toTime = t.length > 0 ? t[0].timestamp : new Date().getTime();\n    const padding = this.createEmptySeries(19 - t.length, toTime);\n    return padding.concat(t);\n  }\n\n  computeChart() {\n    // Data comes as ISO strings - convert\n    const timeseries = this.props.stats.over_time.map(t => {\n      return { timestamp: Date.parse(t.date), value: t.value };\n    });\n\n    if (timeseries.length < 20) {\n      return this.padTimeseries(timeseries);\n    } else {\n      return timeseries;\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.props.className ? \n        `activity-widget ${this.props.className}` : \"activity-widget\"}>\n\n        <h2>Activity \n          {this.props.stats && \n            <span className=\"count\">\n              <NumberFormat \n                displayType=\"text\"\n                value={this.props.stats.total_contributions}\n                thousandSeparator={true} /> edits\n            </span>\n          }\n        </h2>\n\n        {this.props.stats &&\n          <BarChart \n            width={this.props.width} \n            height={this.props.height} \n            barCategoryGap={1.5}\n            data={this.computeChart()} >\n\n            <CartesianGrid \n              strokeDasharray=\"3\" \n              horizontal={false}/>\n\n            <XAxis \n              type=\"number\"\n              dataKey=\"timestamp\"\n\n              axisLine={LINE_STYLE} \n\n              tick={AXIS_STYLE}\n              tickSize={4}\n              tickCount={6}\n              tickLine={LINE_STYLE}\n              tickFormatter={tickFormatter}\n\n              height={20}\n              domain={['dataMin', 'dataMax']}\n              padding={{ left: 5, right: 5 }} />\n\n            <Bar \n              dataKey=\"value\" \n              fill={this.props.fill} />\n\n          </BarChart>\n        }\n      </div>\n    )\n  }\n\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Avatar from './Avatar.jsx';\n\nexport default class CollaboratorList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { collaborators: [] };\n    this.fetchCollaborators(props);\n  }\n\n  componentWillReceiveProps(props) {\n    this.fetchCollaborators(props);\n  }\n\n  fetchCollaborators(props) {\n    if (props.username)\n      axios\n        .get(`/api/account/${props.username}/collaborators`)\n        .then(result => this.setState({ collaborators: result.data }));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.collaborators.length > 0 &&\n          <div className={this.props.className ? `collaborator-list ${this.props.className}` : 'collaborator-list'}>\n            <h2>{this.props.title}</h2>\n            <ul>\n              {this.state.collaborators.map(user => \n                <li key={user.username}>\n                  <a href={`/${user.username}`} title={user.username}>\n                    <Avatar username={user.username} />\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n      </React.Fragment>\n    )\n  }\n\n}","import React, { Component } from 'react';\n\nexport default class Avatar extends Component {\n\n  // https://medium.com/@pppped/compute-an-arbitrary-color-for-user-avatar-starting-from-his-username-with-javascript-cd0675943b66\n  stringToHslColor(str) {\n    let hash = 0;\n    for (let i=0; i<str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash % 360;\n  }\n\n  render() {\n    const color = this.props.username ? `hsl(${this.stringToHslColor(this.props.username)}, 35%, 65%)` : '#e2e2e2';\n\n    return (\n      <div className=\"avatar\" style={{ backgroundColor: color }}>\n        <div className=\"inner\">\n          { this.props.username && this.props.username.charAt(0).toUpperCase() }\n        </div>\n      </div>\n    )\n  }\n\n}","import React, { Component } from 'react';\n\nimport Avatar from './Avatar.jsx';\n\nexport default class Identity extends Component {\n\n  formatURL(url) {\n    return url.replace(/^https?:\\/\\//i, '');\n  }\n\n  render() {\n    const dataAvailable = \n      this.props.account && \n      this.props.account.username &&\n      this.props.account.member_since;\n      \n    return (\n      <div className=\"identity\">\n        <div className=\"user\">\n          <Avatar username={dataAvailable && this.props.account.username} />\n\n          <h1>\n            { dataAvailable ?\n                ((this.props.account.real_name) ? \n                  this.props.account.real_name : this.props.account.username) :\n\n                (<span className=\"placeholder\" />) }\n          </h1>\n\n          <p className=\"member-since\">\n            { dataAvailable ?\n              <React.Fragment>\n                Joined on { new Intl.DateTimeFormat('en-GB', {\n                  year : 'numeric',\n                  month: 'short',\n                  day  : '2-digit'\n                }).format(new Date(this.props.account.member_since)) }\n              </React.Fragment> : <span className=\"placeholder\" />\n            }\n          </p>\n        </div>\n\n        <div className=\"user-extended\">\n          { dataAvailable && this.props.account.bio &&\n            <p className=\"bio\">{this.props.account.bio}</p> }\n\n          { dataAvailable && this.props.account.website && \n            <p className=\"homepage\">\n              <a href={this.props.account.website}>{this.formatURL(this.props.account.website)}</a>\n            </p>\n          }\n        </div>\n      </div>\n    )\n  }\n\n}\n","import { Component } from 'react';\n\nimport { Columns } from '../Columns.js';\n\nexport default class BaseRowComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.updateTotalRowSpan(props);\n  }\n\n  componentWillReceiveProps(next) {\n    this.updateTotalRowSpan(next);\n  }\n\n  /** Updates total unit width requirement for current row layout **/\n  updateTotalRowSpan(props) {\n    this._totalSpan = props.columns.reduce((total, field) => total + Columns.getSpan(field), 0);\n  }\n\n  getWidth(field) {\n    const span = Columns.getSpan(field);\n    return span / this._totalSpan;\n  }\n  \n}","import React from 'react';\n\nimport BaseRowComponent from './BaseRowComponent.jsx';\nimport { HEADER_NAMES } from '../Columns.js';\n\nexport default class HeaderRow extends BaseRowComponent {\n\n  render() {\n    return (\n      <div className=\"column-labels\">\n        {this.props.columns.map(field =>\n          <span\n            key={field}\n            style={{ width: `${100 * super.getWidth(field)}%` }}\n            className={`label ${field}`}\n            onClick={this.props.onSort.bind(this, field)}>\n            <span className=\"inner-wrapper\">\n              <span className=\"inner\">\n                {HEADER_NAMES[field] || field}\n              </span>\n              {this.props.sortColumn === field &&\n                <span className=\"sort icon\">\n                  <span className=\"inner\">\n                    {(this.props.sortAsc) ? '\\ue688' : '\\ue682' }\n                  </span>\n                </span>\n              }\n            </span>\n          </span>\n        )}\n      </div>\n    )\n  }\n\n}\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\nimport TimeAgo from 'react-timeago';\n\nimport BaseRowComponent from './BaseRowComponent.jsx';\n\n/** Icons for possible content type values **/\nconst ICONS = {\n  TEXT_PLAIN   : 'icon_text.png',\n  TEXT_TEIXML  : 'icon_tei.png',\n  IMAGE_UPLOAD : 'icon_image.png',\n  IMAGE_IIIF   : 'icon_iiif.png',\n  DATA_CSV     : 'icon_csv.png'\n};\n\n/** Formatting rules for possible field types **/\nconst FORMATTERS = {\n  language: (language) => \n    language.toUpperCase(),\n\n  uploaded_at: (datetime) => \n    new Intl.DateTimeFormat('en-GB', {\n      year : 'numeric',\n      month: 'short',\n      day  : '2-digit'\n    }).format(new Date(datetime)),\n  \n  last_edit_at: (datetime) => \n    <TimeAgo date={datetime} />,\n\n  public_visibility: (visibility) => {\n    if (visibility === 'PUBLIC') \n      return ( <span className=\"icon\" title=\"Open to anyone\">&#xf09c;</span> );\n    else if (visibility === 'WITH_LINK')\n      return ( <span className=\"icon\" title=\"Open to anyone with the link\">&#xf0c1;</span> );\n    else \n      return ( <span className=\"icon\" title=\"Private\">&#xf023;</span> );\n  },\n\n  access_level: (level) => {\n    if (level === 'ADMIN')\n      return ( <span className=\"icon\" title=\"ADMIN\">&#xf0ad;</span> );\n    else if (level === 'WRITE')\n      return ( <span className=\"icon\" title=\"WRITE\">&#xf040;</span> );\n    else\n      return ( <span className=\"icon\" title=\"READ\">&#xf06e;</span> );\n  },\n\n  annotations: (annotations) =>\n    <NumberFormat \n      displayType=\"text\"\n      value={annotations}\n      thousandSeparator={true} />,\n\n  status_ratio: (ratio) => {\n    const total = ratio.verified + ratio.unverified + ratio.not_identifiable;\n    const pctGreen = ratio.verified / total * 100;\n    const pctYellow = ratio.not_identifiable / total * 100;\n\n    const labels = {\n      'verified': 'verified',\n      'unverified': 'unverified',\n      'not_identifiable': 'flagged'\n    }\n\n    const tooltip = ['verified', 'unverified', 'not_identifiable'].reduce((tooltip, next) => {\n      const count = ratio[next];\n      if (count === 0)\n        return tooltip;\n      else\n        return `${tooltip} ${count} ${labels[next]},`;\n    }, '').slice(0, -1);\n\n    return (\n      <span className=\"bar\" title={tooltip}>\n        <span className=\"verified\" style={{ width: `${pctGreen}%` }} />\n        <span className=\"not_identifiable\" style={{ width: `${pctYellow}%` }} />\n      </span>\n    )\n  }\n\n};\n\n/** Rules for aggregate fields **/\nconst AGGREGATE_FIELDS = {\n  agg_document: (item) => (item.author) ?\n                            `${item.author}, ${item.title}` : item.title\n};\n\nexport default class DocumentRow extends BaseRowComponent {\n\n  createAggregateField(url, field) {\n    return (\n      <a \n        key={field}\n        href={url} \n        className={field.substring(4)}\n        style={{ width: `${100 * super.getWidth(field)}%` }}>\n\n        {AGGREGATE_FIELDS[field](this.props.item)}\n      </a>\n    )\n  }\n\n  createField(url, field) {\n    const formatter = FORMATTERS[field];\n\n    const value = this.props.item[field] !== undefined ? \n      (formatter ? formatter(this.props.item[field]) : this.props.item[field]) :\n      ''; // empty value\n\n    return (\n      <a \n        key={field}\n        href={url}\n        className={field}\n        style={{ width: `${100 * super.getWidth(field)}%` }}>{value}</a>\n    )\n  }\n\n  render() {\n    const type = this.props.item.filetypes[0];\n    const url = `document/${this.props.item.id}/part/1/edit`;\n\n    return (\n      <div\n        className={`row${(this.props.selected) ? ' selected' : ''}`}\n        style={this.props.style}\n        onClick={this.props.onClick} >\n        \n        { this.props.columns.map(field => field.startsWith('agg_') ? \n          this.createAggregateField(url, field) : this.createField(url, field)) }\n\n        <span className={`type icon ${type}`}>\n          <img src={`/assets/images/${ICONS[type]}`} alt={`icon type ${type}`} />\n        </span>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class FolderRow extends Component {\n\n  render() {\n    return (\n      <div\n        style={this.props.style}\n        className=\"row folder\">\n        <a href=\"#\" className=\"folder-icon\">&#xf07b;</a>\n        <a href=\"#\" className=\"folder-name\">{this.props.name}</a>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport Draggable from 'react-draggable';\n\nexport default class Modal extends Component {\n\n  render() {\n    return (\n      <div className={`clicktrap ${this.props.className}`}>\n        <div className=\"modal-wrapper\">\n          <Draggable handle=\".modal-header\">\n            <div className=\"modal\">\n              <div className=\"modal-header\">\n                <h1 className=\"title\">{this.props.title}</h1>\n                <button\n                  className=\"close nostyle\"\n                  onClick={this.props.onClose}>&#xe897;</button>\n              </div>\n\n              <div className=\"modal-body\">\n                {this.props.children}\n              </div>\n            </div>\n          </Draggable>\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\n\nimport { HEADER_NAMES } from '../Columns.js';\n\nconst SortableItem = SortableElement(({ label }) =>\n  <div className=\"card\">{label}</div>\n);\n\nconst SortableList = SortableContainer(({ items }) =>\n  <div className=\"column-order\">\n    {items.map((item, idx) => (\n      <SortableItem key={`card-${idx}`} index={idx} label={HEADER_NAMES[item]} />\n    ))}\n  </div>\n);\n\nexport default class ColumnOrder extends Component {\n\n  render() {\n    return (\n      <SortableList\n        items={this.props.items}\n        onSortEnd={e => this.props.onSortEnd(e.oldIndex, e.newIndex)} />\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport Modal from '../../../components/Modal.jsx';\nimport ColumnOrder from './ColumnOrder.jsx';\n\nimport { COLUMNS, HEADER_NAMES } from '../Columns.js';\n\nexport default class PreferencesModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: props.columns.slice(0)\n    }\n  }\n\n  componentWillReceiveProps(next) {\n    if (next.columns !== this.props.columns)\n      this.setState({ columns: next.columns.slice(0) });\n  }\n\n  /** Computes a map (fieldname -> checked) from the current columns state **/\n  getCheckboxStates(props) {\n    const states = {};\n\n    COLUMNS.forEach(field => {\n      const isChecked = this.state.columns.includes(field);\n      states[field] = isChecked;\n    });\n\n    return states;\n  }\n\n  /** Sets visibility for all rows to the given boolean value **/\n  setAllRows(checked) {\n    const checkAll = () => {\n      const toAppend = \n        COLUMNS.filter(field => !this.state.columns.includes(field));\n\n      this.setState({ columns: this.state.columns.concat(toAppend) });\n    };\n\n    const uncheckAll = () => {\n      this.setState({ columns: [] });\n    };\n\n    if (checked) \n      checkAll();\n    else\n      uncheckAll();\n  }\n\n  /**\n   * Clicking 'ALL' either checks all boxes or - if all are currently\n   * checked, unchecks them.\n   */\n  onClickAll() {\n    const allRowsChecked = COLUMNS.length === this.state.columns.length;\n    if (allRowsChecked)\n      this.setAllRows(false);\n    else\n      this.setAllRows(true);\n  }\n\n  /** Toggles the checkbox with the given name **/\n  toggleOne(name) {\n    this.setState(prev => {\n      const idx = prev.columns.indexOf(name);\n      if (idx < 0)\n        prev.columns.push(name);\n      else\n        prev.columns.splice(idx, 1);        \n    \n      return prev;\n    });\n  }\n\n  onSort(oldIndex, newIndex) {\n    this.setState({\n      columns: arrayMove(this.state.columns, oldIndex, newIndex)\n    });\n  }\n\n  render() {\n    // Helper to create a single checkbox + label row\n    const createRow = (field) =>\n      <li key={field}>\n        <input\n          type=\"checkbox\"\n          id={field}\n          name={field}\n          checked={this.state.columns.includes(field)}\n          onChange={this.toggleOne.bind(this, field)} />\n        <label htmlFor={field}>{HEADER_NAMES[field]}</label>\n      </li>\n\n    return (\n      <Modal\n        className=\"preferences\"\n        title=\"Configure Columns\"\n        onClose={this.props.onCancel}>\n\n        <div className=\"scroll-pane\">\n          <div className=\"selected-columns\">\n            <button\n              className=\"all nostyle\"\n              onClick={this.onClickAll.bind(this)}>All</button>\n            <ul>\n              { COLUMNS.map(createRow) }\n            </ul>\n          </div>\n\n          <ColumnOrder\n            items={this.state.columns} \n            onSortEnd={this.onSort.bind(this)} />\n        </div>\n\n        <div className=\"buttons\">\n          <button\n            className=\"btn\"\n            onClick={this.props.onSave.bind(this, this.state.columns)}>Save</button>\n\n          <button \n            className=\"btn outline\"\n            onClick={this.props.onCancel}>Cancel</button>\n        </div>\n      </Modal>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { AutoSizer, List } from 'react-virtualized';\nimport Dropzone from 'react-dropzone'\n\nimport { Columns } from './Columns.js';\nimport DropzoneDecoration from '../upload/DropzoneDecoration.jsx';\nimport Readme from '../Readme.jsx';\nimport Selection from '../Selection.js';\n\nimport HeaderRow from './rows/HeaderRow.jsx';\nimport DocumentRow from './rows/DocumentRow.jsx';\nimport FolderRow from './rows/FolderRow.jsx';\nimport PreferencesModal from  './preferences/PreferencesModal.jsx';\n\nexport default class TablePane extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      prefsOpen: false,\n      columns: Columns.filterByView(props.columns, props.view),\n      selection: new Selection(props.folders.concat(props.documents), props.selection)\n    }\n  }\n\n  /** Set derived state **/\n  componentWillReceiveProps(next) {\n    this.setState({ \n      columns: Columns.filterByView(next.columns, next.view),\n      selection: new Selection(next.folders.concat(next.documents), next.selection)\n    });\n  }\n\n  /** Handle click/SHIFT+click/CTRL+click selection via Selection helper class */\n  onClick(evt, item, idx) {\n    const isShift = evt.getModifierState(\"Shift\");\n    const isCtrl = evt.getModifierState(\"Control\");\n\n    // Is this a selection or deselection?\n    const isSelectAction = \n      isShift || isCtrl || !this.props.selection.includes(item);\n\n    if (isSelectAction) {\n      if (isShift)\n        this.state.selection.selectRange(idx);\n      else\n        this.state.selection.selectItem(item, isCtrl);\n\n      this.props.onSelect(this.state.selection.getSelectedItems());\n      evt.preventDefault();\n    }\n  }\n\n  rowRenderer() {\n    const allItems = this.props.folders.concat(this.props.documents);\n\n    return ((args) => {\n      const item = allItems[args.index];\n      const isFolder = item.name;\n\n      if (isFolder)\n        return (\n          <FolderRow key={args.key} style={args.style} name={item.name} />\n        )\n      else\n        return (\n          <DocumentRow\n            key={args.key}\n            style={args.style}\n            columns={this.state.columns}\n            item={item}\n            selected={this.props.selection && this.props.selection.includes(item)}\n            onClick={e => this.onClick(e, item, args.index)} />\n        )\n    })\n  }\n\n  showPreferences(visible) {\n    this.setState({ prefsOpen: visible });\n  }\n\n  onSavePreferences(columns) {\n    this.setState({ prefsOpen: false });\n    this.props.onChangeColumnPrefs(columns);\n  }\n\n  sortBy(field) {\n    const asc = this.props.sorting ?\n      this.props.sorting.by === field ? !this.props.sorting.asc : true :\n      true;\n\n    this.props.onSort({ by: field, asc: asc });\n  }\n\n  onDrag(active) {\n    this.setState({ drag: active });\n  }\n\n  onDrop(files, _, evt) {\n    const url = evt.dataTransfer.getData('URL');\n\n    const hostname = url ? (() => {\n      const a = document.createElement('a');\n      a.href = url;\n      return a.hostname;\n    })() : null;\n\n    this.setState({ drag: false });\n\n    if (files.length > 0)\n      this.props.onDropFiles(files);\n    else if (url && hostname !== window.location.hostname) // Require external link\n      this.props.onDropURL(url);\n  }\n\n  render() {\n    const readme = React.Children.toArray(this.props.children)\n      .filter(c => c.type === Readme)\n      .shift(); // First readme or undefined\n\n    const tablePane =\n      <div className=\"documents-pane table-pane\">\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              className=\"virtualized-list\"\n              width={width}\n              height={height}\n              rowCount={this.props.folders.length + this.props.documents.length}\n              rowHeight={47}\n              rowRenderer={this.rowRenderer()} />\n          )}\n        </AutoSizer>\n\n        { this.state.drag && <DropzoneDecoration /> }\n        { this.props.busy && <div className=\"busy-mask\" /> }\n      </div>\n\n    return (\n      <React.Fragment>\n        <div className=\"documents-table-header\">\n          <HeaderRow \n            columns={this.state.columns} \n            onSort={this.sortBy.bind(this)}\n            sortColumn={this.props.sorting ? this.props.sorting.by : null} \n            sortAsc={this.props.sorting ? this.props.sorting.asc : null} />\n\n          <button\n            className=\"column-options-btn nostyle icon\"\n            onClick={this.showPreferences.bind(this, true)} >&#xf141;</button>\n        </div>\n\n        {readme}\n\n        {this.props.disableFiledrop ? tablePane :\n          <Dropzone\n            className=\"dropzone\"\n            disableClick={true}\n            onDragEnter={this.onDrag.bind(this, true)}\n            onDragLeave={this.onDrag.bind(this, false)}\n            onDrop={this.onDrop.bind(this)}>\n            \n            {tablePane}\n            \n          </Dropzone>\n        }\n\n        {this.state.prefsOpen &&\n          <PreferencesModal\n            columns={this.props.columns}\n            onCancel={this.showPreferences.bind(this, false)} \n            onSave={this.onSavePreferences.bind(this)} />\n        }\n      </React.Fragment>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Folder extends Component {\n\n  render() {\n    return (\n      <div className=\"cell\">\n        <div className=\"item-wrapper\">\n          <a href=\"#\" className=\"folder\">\n            <div className=\"label\">\n              {this.props.name}\n            </div>\n          </a>\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Document extends Component {\n\n  render() {\n    const type = this.props.filetypes[0]; // TODO make more clever in the future\n    const isStacked = this.props.fileCount > 1;\n\n    return (\n      <div\n        className={`cell${(this.props.selected) ? ' selected' : ''}`}\n        onClick={this.props.onClick}\n        onDoubleClick={this.props.onDoubleClick} >\n        \n        <div className=\"inner\">\n          <div className={`item-wrapper${isStacked ? ' stacked' : ''}`}>\n            { isStacked && <div className=\"stack\" /> }\n            <a href={`document/${this.props.id}/part/1/edit`} className={`document ${type}`}>\n              <div className=\"label\">\n                {this.props.title}\n              </div>\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone'\n\nimport { AutoSizer, List } from 'react-virtualized';\n\nimport Selection from '../Selection.js';\nimport Folder from './Folder.jsx';\nimport Document from './Document.jsx';\nimport Readme from '../Readme.jsx';\n\nimport DropzoneDecoration from '../upload/DropzoneDecoration.jsx';\n\nconst ITEM_SIZE = 192;\n\n/**\n * Using the following example:\n *\n * https://stackoverflow.com/questions/46368305/how-to-make-a-list-grid-with-a-responsive-number-of-columns-using-react-virtuali\n * http://plnkr.co/edit/zjCwNeRZ7XtmFp1PDBsc?p=preview\n */\nexport default class GridPane extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: new Selection(props.folders.concat(props.documents), props.selection) \n    };\n  }\n\n  /** Set derived state **/\n  componentWillReceiveProps(next) {\n    this.setState({ \n      selection: new Selection(next.folders.concat(next.documents), next.selection)\n    });\n  }\n\n  /** Handle click/SHIFT+click/CTRL+click selection via Selection helper class */\n  onClick(evt, item, idx) {\n    const isShift = evt.getModifierState(\"Shift\");\n    const isCtrl = evt.getModifierState(\"Control\");\n\n    if (isShift)\n      this.state.selection.selectRange(idx);\n    else\n      this.state.selection.selectItem(item, isCtrl);\n\n    this.props.onSelect(this.state.selection.getSelectedItems());\n    evt.preventDefault();\n  }\n\n  onDoubleClick(item) {\n    window.location.href= `document/${item.id}/part/1/edit`;\n  }\n\n  rowRenderer(itemsPerRow, rowCount) {\n    const allItems = this.props.folders.concat(this.props.documents);\n\n    return ((args) => {\n      const fromIndex = args.index * itemsPerRow;\n      const toIndex = Math.min(fromIndex + itemsPerRow, allItems.length);\n      const itemsInRow = toIndex - fromIndex;\n\n      const renderedItems = new Array(itemsInRow).fill(undefined).map((_, rowIdx) => {\n        const idx = rowIdx + fromIndex;\n        const item = allItems[idx];\n\n        const isFolder = item.name; // Dummy condition\n        if (isFolder)\n          return (\n            <Folder key={idx} name={item.name} />\n          )\n        else\n          return (\n            <Document\n              key={idx}\n              id={item.id}\n              title={item.title}\n              filetypes={item.filetypes}\n              fileCount={item.file_count}\n              selected={this.props.selection && this.props.selection.includes(item)}\n              onClick={e => this.onClick(e, item, args.index)} \n              onDoubleClick={this.onDoubleClick.bind(this, item)} />\n          )\n      });\n\n      if (itemsInRow < itemsPerRow) // Add dummies to preserve grid layout\n        renderedItems.push(new Array(itemsPerRow - itemsInRow).fill(undefined).map((_, idx) =>\n          <div className=\"cell dummy\" key={`dummy-${idx}`} />\n        ))\n\n      return (\n        <div\n          key={args.key}\n          style={args.style}\n          className=\"row\">\n          {renderedItems}\n        </div>\n      )\n    });\n  }\n\n  onDrag(active) {\n    this.setState({ drag: active });\n  }\n\n  onDrop(files, _, evt) {\n    const url = evt.dataTransfer.getData('URL');\n\n    this.setState({ drag: false });\n\n    if (files.length > 0) this.props.onDropFiles(files);\n    else if (url) this.props.onDropURL(url);\n  }\n\n  render() {\n    const readme = React.Children.toArray(this.props.children)\n      .filter(c => c.type === Readme)\n      .shift(); // First readme or undefined\n\n    const gridPane =\n      <AutoSizer>\n        {({ height, width }) => {\n          const itemCount = this.props.folders.length + this.props.documents.length;\n          const itemsPerRow = Math.floor(width / ITEM_SIZE);\n          const rowCount = Math.ceil(itemCount / itemsPerRow);\n\n          return (\n            <List\n              className=\"virtualized-grid\"\n              width={width}\n              height={height}\n              rowCount={rowCount}\n              rowHeight={ITEM_SIZE}\n              rowRenderer={this.rowRenderer(itemsPerRow, rowCount)} />\n          )\n        }}\n      </AutoSizer>\n\n    return (\n      <React.Fragment>\n        {readme}\n        <div className=\"documents-pane grid-pane\">\n          {this.props.disableFiledrop ? gridPane :\n            <Dropzone\n              className=\"dropzone\"\n              disableClick={true}\n              onDragEnter={this.onDrag.bind(this, true)}\n              onDragLeave={this.onDrag.bind(this, false)}\n              onDrop={this.onDrop.bind(this)}>\n\n              {gridPane}\n\n            </Dropzone>\n          }\n\n          { this.state.drag && <DropzoneDecoration /> }\n        </div>\n      </React.Fragment>\n    )\n  }\n\n}\n","// Columns available in all views\nconst COLUMNS_GENERAL = [\n  // Aggregate fields\n  // 'agg_document',\n\n  // Common fields\n  'author',\n  'title',\n  'language',\n  'date_freeform',\n  'uploaded_at',\n  'last_edit_at',\n  'last_edit_by',\n  'annotations',\n  'public_visibility',\n  'status_ratio'\n  // 'activity'\n];\n\n// Columns specific to SHARED_WITH_ME view\nconst COLUMNS_SHARED_WITH_ME = [\n  'owner',\n  'shared_by',\n  'access_level'\n];\n\nexport const COLUMNS = COLUMNS_GENERAL.concat(COLUMNS_SHARED_WITH_ME);\n\n// Labels to use for fields\nexport const HEADER_NAMES = {\n  // agg_document    : 'Document',\n\n  author            : 'Author',\n  title             : 'Title',\n  language          : 'Language',\n  date_freeform     : 'Date',\n  uploaded_at       : 'Uploaded at',\n  last_edit_at      : 'Last edit',\n  last_edit_by      : 'Last edit by',\n  annotations       : 'Annotations',\n  public_visibility : 'Visibility',\n  status_ratio      : 'Verification ratio',\n  activity          : 'Activity graph',\n\n  owner             : 'Document owner',\n  shared_by         : 'Shared by',\n  access_level      : 'Access'\n};\n\n// Relative width requirements per column (XL, L, M, S)\nexport const COLUMN_WIDTH = {\n  agg_document    : 'XL',\n\n  author            : 'M',\n  title             : 'L',\n  language          : 'M',\n  date_freeform     : 'M',\n  uploaded_at       : 'M',\n  last_edit_at      : 'M',\n  last_edit_by      : 'M',\n  annotations       : 'M',\n  public_visibility : 'M',\n  status_ratio      : 'M',\n  activity          : 'M',\n\n  owner             : 'M',\n  shared_by         : 'M',\n  access_level      : 'M'\n};\n\nexport const AGGREGATE_COLUMNS = {\n  agg_document: [ 'author', 'document' ]\n};\n\n// Static helper methods \nexport class Columns {\n\n  static getSpan(field) {\n    const w = COLUMN_WIDTH[field];\n    if (w === 'XL') \n      return 6;\n    else if (w === 'L')\n      return 4;\n    else if (w === 'M')\n      return 2;\n    else if (w === 'S')\n      return 1;\n  }\n\n  /** Expands agg_ columns to those that are required to build them **/\n  static expandAggregatedColumns(columns) {\n    return columns.reduce((result, field) => {\n      if (field.startsWith('agg_'))\n        result = result.concat(AGGREGATE_COLUMNS[field]);\n      else\n        // Just append\n        result.push(field);\n\n      return result;\n    }, []);\n  }\n\n  /** Removes the columns that are not applicable in the given view **/\n  static filterByView(columns, view) { \n    if (view === 'MY_DOCUMENTS')\n      // Remove columns specific to 'Shared With Me'\n      return columns.filter(c => !COLUMNS_SHARED_WITH_ME.includes(c));\n    else\n      // All\n      return columns; \n  }\n\n}","export default class StoredUIState {\n\n  static load() {\n    const state = {};\n\n    const addIfDefined = (key) => {\n      const value = localStorage.getItem(`r2.workspace.${key}`);\n      if (value) state[key] = JSON.parse(value);\n    }\n\n    ['view', 'presentation', 'table_columns', 'table_sorting'].map(addIfDefined)\n\n    return state;\n  }\n\n  static save(key, value) {\n    const prefixed = `r2.workspace.${key}`\n    localStorage.setItem(prefixed, JSON.stringify(value));\n  }\n\n}","import React, { Component } from 'react';\n\nexport default class Readme extends Component {\n\n  render() {\n    return (\n      <div className=\"readme\">\n        <div className=\"inner\">\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n\n}\n","export default class Selection {\n    \n  constructor(allItems, selection) {\n    this._allItems = allItems;\n    this._selection = selection;\n  }\n\n  clear() {\n    this._selection = [];\n  }\n\n  isEmpty() {\n    return this._selection.length === 0;\n  }\n\n  getSelectedItems() {\n    return this._selection;\n  }\n\n  selectItem(item, isCtrlPressed) {\n    const thisIdx = this._selection.indexOf(item);\n    const isSelected = thisIdx > -1;\n\n    if (isCtrlPressed) {\n      // Toggle this item, leave the rest of the selection unchanged\n      if (isSelected)\n        this._selection.splice(thisIdx, 1);\n      else\n        this._selection.push(item);      \n    } else {\n      // Toggle state of this item and clear the rest of the selection\n      this._selection = [ item ];\n    }\n  }\n\n  /**\n   * Range selection: SHIFT + click. \n   * \n   * Behavior follows Mac conventions, cf. \n   * https://stackoverflow.com/questions/2959887/algorithm-for-shift-clicking-items-in-a-collection-to-select-them\n   */\n  selectRange(toIdx) {\n    const selectedIndices = this._selection.map(item => {\n      return this._allItems.indexOf(item);\n    });   \n    \n    const minIdx = Math.min.apply(null, selectedIndices);\n    const maxIdx = Math.max.apply(null, selectedIndices);\n\n    const isOutside = (toIdx > maxIdx) || (toIdx < minIdx);\n\n    const slice = (from, to) => this._allItems.slice(from, to + 1);\n\n    if (isOutside && toIdx > maxIdx)\n      // Expand selection downwards\n      this._selection = slice(minIdx, toIdx);\n    else if (isOutside)\n      // Expand selection upwards\n      this._selection = slice(toIdx, maxIdx);\n    else\n      // Fill from topmost\n      this._selection = slice(minIdx, toIdx);\n  }\n\n}","import React, { Component } from 'react';\n\nexport default class HeaderIcon extends Component {\n\n  render() {\n    return (\n      <div\n        className={`header-icon ${this.props.className}`}\n        onClick={this.props.onClick}>\n        {(this.props.link) ? \n          <a href={this.props.link} className=\"icon inner\">\n            {this.props.icon}\n          </a> :\n\n          <span className=\"icon inner\">\n            {this.props.icon}\n          </span>\n        }\n      </div>\n    )\n  }\n\n}\n"],"sourceRoot":""}