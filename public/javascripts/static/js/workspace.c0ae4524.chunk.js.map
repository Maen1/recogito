{"version":3,"sources":["workspace/API.js","common/components/Meter.jsx","common/content/upload/Uploader.jsx","workspace/header/search/AdvancedSearch.jsx","workspace/header/search/Search.jsx","common/components/Prompt.jsx","workspace/actions/DeleteAction.jsx","workspace/header/Header.jsx","common/components/MenuPopup.jsx","workspace/sidebar/sections/Account.jsx","workspace/sidebar/sections/CreateNew.jsx","workspace/sidebar/sections/Views.jsx","workspace/sidebar/sections/Storage.jsx","workspace/sidebar/Sidebar.jsx","workspace/App.jsx"],"names":["fetchDocuments","path","config","axios","post","concat","API","get","opt_folder","title","parentId","parent","id","put","delete","ids","data","Meter","react_default","a","createElement","className","style","position","width","this","props","value","height","Component","Uploader","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_emptyState","start","files","remoteSource","url","phase","totalSize","reduce","total","f","size","filepartIds","length","map","uploadId","uploadStatus","progress","errors","next","_this2","setState","_this3","initNewDocument","then","result","uploadFiles","registerURL","catch","error","prev","slice","push","response","finalizeDocument","bind","name","formdata","FormData","append","headers","X-Requested-With","_this4","requests","file","idx","onUploadProgress","evt","loaded","uuid","uploadOne","Promise","all","_this5","currentFolder","document","location","hash","substring","tasks","running_tasks","pollTaskProgress","document_id","onUploadComplete","console","log","filepartId","pollResult","_this6","subtasks","find","t","filepart_id","indexOf","setUploadStatus","status","documentId","taskTypes","_this7","updateStatusForFile","setTimeout","complete","isUploadComplete","_this8","totalLoaded","onClick","onCancel","key","message","Meter_Meter","AdvancedSearch","onMousedown","assertThisInitialized","onKeydown","addEventListener","removeEventListener","isClickOutside","_node","contains","target","isClickOnToggle","classList","onClose","which","ref","n","type","Search","advancedSearchOpen","placeholder","AdvancedSearch_AdvancedSearch","toggleAdvancedSearch","Prompt","onNo","toLowerCase","react_draggable_default","handle","onYes","DeleteAction","folders","deleteFolder","bulkDeleteFolders","resolve","documents","d","view","deleteDocument","unshareDocument","bulkDeleteDocuments","bulkUnshareDocuments","selection","filter","i","onStart","deleteDocuments","deleteFolders","onSuccess","onError","ReactDOM","createPortal","Prompt_Prompt","executeDelete","body","Header","action","afterDelete","isOpen","Search_Search","HeaderIcon","icon","link","Breadcrumbs","breadcrumbs","count","docCount","react_transition_group","in","timeout","classNames","startDeleteAction","presentation","onTogglePresentation","DeleteAction_DeleteAction","onDelete","onDeleteSuccess","onDeleteError","cancelDelete","MenuPopup","menu","group","options","option","disabled","onSelect","href","label","Fragment","Account","menuVisible","window","showMenu","ProfileInfo","account","MenuPopup_MenuPopup","onSelectMenuOption","closeMenu","CreateNew","currentFolderId","createFolder","onFolderCreated","_input","click","Array","from","onUploadFiles","onShowOptions","c","multiple","onChange","display","onSelectOption","ViewListItem","current","children","ViewList","Views_ViewListItem","currentView","onChangeView","Storage","dataAvailable","storage","quota","quota_mb","used","used_mb","number_format_default","displayType","thousandSeparator","Sidebar","collaborators","Account_Account","CreateNew_CreateNew","Views_ViewList","Storage_Storage","ActivityWidget","fill","stats","CollaboratorList","username","App","table_columns","table_sorting","busy","total_docs","readme","fileUploads","urlUpload","assign","StoredUIState","load","_root","getElementById","onhashchange","changeFolder","querySelector","fetchAccountData","refreshCurrentView","columns","Columns","expandAggregatedColumns","sort","accountData","myDocuments","getDisplayConfig","items","sharedWithMe","save","fetchMyDocuments","fetchSharedWithMe","before","p","sorting","folder","renameFolder","_this9","_this10","isUploading","Sidebar_Sidebar","startUpload","changeView","Header_Header","setBusy","togglePresentation","TablePane","disableFiledrop","onSort","onSortTable","onDropFiles","onDropURL","startRegisterRemoteSource","onChangeColumnPrefs","onRenameFolder","Readme","GridPane","Uploader_Uploader","render","App_App"],"mappings":"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","file":"static/js/workspace.c0ae4524.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst fetchDocuments = (path, config) => {\n  return axios.post(`/api/directory/${path}`, config);\n};\n\nexport default class API {\n\n  static accountData() {\n    return axios.get('/api/account/my');\n  }\n\n  static myDocuments(config, opt_folder) {\n    return opt_folder ?\n      fetchDocuments(`my/${opt_folder}`, config) : fetchDocuments('my', config);\n  }\n\n  static sharedWithMe(config) {\n    return fetchDocuments('my/shared', config);\n  }\n\n  static createFolder(title, parentId) {\n    return axios.post('/api/folder', {\n      title: title,\n      parent: parentId\n    });\n  }\n\n  static renameFolder(id, title) {\n    return axios.put(`/api/folder/${id}?title=${title}`);\n  }\n\n  static deleteFolder(id) {\n    return axios.delete(`/api/folder/${id}`);\n  }\n\n  static bulkDeleteFolders(ids) {\n    return axios.delete(`/api/folder/bulk`, { data: ids });\n  }\n\n  // Deletes one document via the API\n  static deleteDocument(id) {\n    return axios.delete(`/api/document/${id}`);\n  }\n\n  // Deletes multiple documents in one go via the bulk API\n  static bulkDeleteDocuments(ids) {\n    return axios.delete('/api/document/bulk', { data: ids });\n  }\n\n  static unshareDocument(id) {\n    return axios.delete(`/api/shared/document/${id}`);\n  }\n\n  static bulkUnshareDocuments(ids) {\n    return axios.delete('/api/shared/document/bulk', { data: ids });\n  }\n\n}","import React, { Component } from 'react';\n\nexport default class Meter extends Component {\n\n  render() {\n    return (\n      <div\n        className=\"meter\"\n        style={{ position: 'relative' }}>\n\n        <div\n          className=\"bar\"\n          style={{\n            width: `${100 * this.props.value}%`,\n            height: '100%'\n          }} />\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Meter from '../../components/Meter.jsx';\n\nexport default class Uploader extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this._emptyState(props);\n    this.start();\n  }\n\n  _emptyState(props) {\n    return {\n      files: props.files,\n      remoteSource: props.url,\n      phase: 'Uploading',\n      totalSize: props.files.reduce((total, f) => total + f.size, 0),\n      filepartIds: (props.files.length > 0) ? props.files.map(() => null) : [ null ],\n      uploadId: null,\n      uploadStatus: (props.files.length > 0) ? props.files.map(() => 'UPLOADING') : [ 'UPLOADING'],\n      progress: (props.files.length > 0) ? props.files.map(() => 0) : [ 0 ],\n      errors: []\n    };\n  }\n\n  componentWillReceiveProps(next) {\n    if (this.props.files === next.files && this.props.url === next.url)\n      return;\n\n    this.setState(this._emptyState(next), () => this.start());\n  }\n\n  /** \n   * Starts a new upload.\n   * \n   * Since one document generally consists of multiple files, the \n   * upload process is multi-stage: \n   * \n   * - first, the new document is initialized, and assigned an ID on the server\n   * - then, all files are uploaded to this document\n   * - finally, a finalization requests closes the document, and waits for any\n   *   processing (image tiling, TEI conversion) to finish\n   */\n  start() {\n    this.initNewDocument()\n      .then((result) => { \n        this.setState({ uploadId: result.data.id });\n\n        // Branch based on files vs. remote URL\n        if (this.state.files.length > 0)\n          return this.uploadFiles() \n        else if (this.state.remoteSource)\n          return this.registerURL()\n      })\n      .catch(error => {\n        this.setState(prev => {\n          const errors = prev.errors.slice(0);\n          errors.push(error.response.data);\n          return { errors: errors };\n        });\n      })\n      .then(this.finalizeDocument.bind(this));\n  }\n\n  /**\n   * Initializes a new document, using the filename as title,\n   * or a 'New document' placeholder in case there are multiple files.\n   */\n  initNewDocument() {\n    const title = (this.state.files.length === 1) ? this.state.files[0].name : 'New document';\n    const formdata = new FormData();\n    formdata.append('title', title);\n\n    return axios.post('/my/upload', formdata, {\n      headers: { 'X-Requested-With': 'XMLHttpRequest' }\n    });\n  }\n\n  registerURL() {\n    this.setState({ phase: 'Importing' });\n\n    const formdata = new FormData();\n    formdata.append('url', this.state.remoteSource);\n\n    return axios.post(`/my/upload/${this.state.uploadId}/file`, formdata, {\n      headers: { 'X-Requested-With': 'XMLHttpRequest' }\n    });\n  }\n\n  /**\n   * Uploads the files in parallel.\n   */\n  uploadFiles() {\n    // Helper: handles upload for one file\n    const uploadOne = (file, idx) => {\n      const formdata = new FormData();\n      formdata.append('file', file);\n\n      const onUploadProgress = (evt) => {\n        const progress = this.state.progress.slice(0); // Clone progress array\n        progress[idx] = evt.loaded;\n        this.setState({ progress: progress });\n      }\n\n      return axios.post(`/my/upload/${this.state.uploadId}/file`, formdata, {\n        headers: { 'X-Requested-With': 'XMLHttpRequest' },\n        onUploadProgress: onUploadProgress\n      }).then(result => {\n        this.setState(prev => {\n          const filepartIds = prev.filepartIds.slice(0);\n          filepartIds[idx] = result.data.uuid;\n          return { filepartIds: filepartIds };\n        });\n\n        return result;\n      }).catch(error => {\n        this.setState(prev => {\n          const uploadStatus = prev.uploadStatus.slice(0);\n          uploadStatus[idx] = 'FAILED';\n\n          const errors = prev.errors.slice(0);\n          errors.push(error.response.data);\n\n          return { \n            uploadStatus: uploadStatus,\n            errors: errors \n          };\n        });\n      });\n    }\n    \n    // The list of request promises...\n    const requests = this.state.files.map((file, idx) => uploadOne(file, idx));\n\n    // ... rolled into a promise of the list of request results\n    return Promise.all(requests);\n  }\n\n  /**\n   * Finalizes the upload, creating the document and starting processing tasks (if any)\n   */\n  finalizeDocument()  {\n    const currentFolder = document.location.hash.substring(1);\n\n    const url = currentFolder ?\n      `/my/upload/${this.state.uploadId}/finalize?folder=${currentFolder}` :\n      `/my/upload/${this.state.uploadId}/finalize`;\n\n    return axios.post(url, {\n      headers: { 'X-Requested-With': 'XMLHttpRequest' }\n    }).then(result => {\n      const tasks = result.data.running_tasks;\n      if (tasks.length > 0) {\n        this.setState({ phase: 'Importing...' });\n        this.pollTaskProgress(result.data.document_id, tasks);\n      } else {\n        this.props.onUploadComplete();\n      }\n    }).catch(error => {\n      console.log('Upload contained errors');\n    });\n  }\n\n  updateStatusForFile(filepartId, pollResult) {\n    const progress = pollResult.subtasks.find(t => t.filepart_id === filepartId);\n    const idx = this.state.filepartIds.indexOf(filepartId);\n\n    const setUploadStatus = (value) => {\n      this.setState(prev => {\n        const uploadStatus = prev.uploadStatus.slice(0);\n        uploadStatus[idx] = value;\n        return { uploadStatus: uploadStatus };\n      })\n    }\n\n    if (progress)\n      setUploadStatus(progress.status);\n    else // No task running for this file - complete\n      setUploadStatus('COMPLETED');\n  }\n\n  /**\n   * Polls import task progress\n   */\n  pollTaskProgress(documentId, taskTypes) {    \n    axios.get(`/api/task?id=${documentId}`)\n      .then(result => {\n        // Update status per file\n        this.state.filepartIds.map(id => this.updateStatusForFile(id, result.data));\n        const isDone = result.data.status === 'COMPLETED' || result.data.status === 'FAILED';\n        if (isDone)\n          this.props.onUploadComplete()\n        else\n          setTimeout(() => this.pollTaskProgress(documentId, taskTypes), 1000);\n      });\n  }\n\n  isUploadComplete() {\n    return this.state.uploadStatus\n      .reduce((complete, next) => complete && (next === 'COMPLETED' || next === 'FAILED'));\n  }\n\n  onCancel(evt) {\n    if (this.isUploadComplete())\n      this.props.onUploadComplete();\n  }\n\n  render() {\n    const totalLoaded = this.state.progress.reduce((total, next) => total + next, 0);\n\n    return (\n      <div className=\"upload-progress\">\n        <div className=\"phase\">\n          {this.state.phase}\n          <button \n            className=\"close nostyle\"\n            onClick={this.onCancel.bind(this)}>&#xe897;</button>\n        </div>\n        <ul className={`files${(this.state.errors.length > 0) ? ' has-errors' : ''}`}>\n          {this.state.files.map((f, idx) =>\n            <li key={idx}>\n              {f.name}\n              <span className={`icon spinner ${this.state.uploadStatus[idx]}`}></span>\n            </li>\n          )}\n\n          {this.state.remoteSource &&\n            <li>\n              Fetching content from remote source...\n              <span className=\"icon spinner RUNNING\"></span>\n            </li>\n          }\n        </ul>\n        {this.state.errors.length > 0 && \n          <ul className=\"errors\">\n            {this.state.errors.map((message, idx) => <li key={idx}>{message}</li>)}\n          </ul>\n        }\n        <div className=\"progress\">\n          <Meter value={totalLoaded / this.state.totalSize} />\n        </div>\n      </div>\n    )\n  }\n\n}","import React, { Component } from 'react';\n\nexport default class AdvancedSearch extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onMousedown = this.onMousedown.bind(this);\n    this.onKeydown = this.onKeydown.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.onMousedown, false);\n    document.addEventListener('keydown', this.onKeydown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.onMousedown, false);\n    document.removeEventListener('keydown', this.onKeydown, false);\n  }\n\n  onMousedown(evt) {\n    const isClickOutside = !this._node.contains(evt.target);\n    const isClickOnToggle = evt.target.classList.contains('advanced');\n    if (isClickOutside && !isClickOnToggle) this.props.onClose();\n  }\n\n  onKeydown(evt) {\n    if (evt.which === 27) this.props.onClose();\n  }\n\n  render() {\n    return (\n      <div\n        ref={n => this._node = n}\n        className=\"advanced-search\">\n        <button\n          className=\"close nostyle\"\n          onClick={this.props.onClose}>&#xe897;</button>\n\n        <form>\n          <fieldset>\n            <p>\n              <label>Search in</label>\n              <select>\n                <option>All of Recogito</option>\n                <option>My documents</option>\n                <option>Shared with me</option>\n              </select>\n              <span className=\"hint\" />\n            </p>\n\n            <p>\n              <label>Document type</label>\n              <select>\n                <option>Any</option>\n                <option>Text</option>\n                <option>Image</option>\n                <option>Table</option>\n              </select>\n              <span className=\"hint\" />\n            </p>\n\n            <p>\n              <label>Owner</label>\n              <select>\n                <option>Anyone</option>\n                <option>me</option>\n                <option>specific user</option>\n              </select>\n              <span className=\"hint\" />\n            </p>\n\n            <p>\n              <label>Metadata contains</label>\n              <input type=\"text\" />\n              <span className=\"hint\" />\n            </p>\n\n            <p>\n              <label>Last modified</label>\n              <select>\n                <option>Any time</option>\n                <option>this week</option>\n              </select>\n              <span className=\"hint\" />\n            </p>\n          </fieldset>\n          <fieldset className=\"buttons\">\n            <button className=\"nostyle clear\">Clear</button>\n            <button type=\"submit\" className=\"btn\">Search</button>\n          </fieldset>\n        </form>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nimport AdvancedSearch from './AdvancedSearch.jsx';\n\nexport default class Search extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { advancedSearchOpen: false }\n  }\n\n  toggleAdvancedSearch() {\n    this.setState(prev => (\n      { advancedSearchOpen: !prev.advancedSearchOpen }\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"search\">\n          <div className=\"wrapper\">\n            <input placeholder=\"Search Recogito...\"/>\n            {/* <button\n              className=\"icon nostyle advanced\"\n            onClick={this.toggleAdvancedSearch.bind(this)}>{'\\ue688'}</button> */}\n          </div>\n          <span className=\"icon hand-lens\">&#xf002;</span>\n        </div>\n        {this.state.advancedSearchOpen &&\n          <AdvancedSearch onClose={this.toggleAdvancedSearch.bind(this)}/>\n        }\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport Draggable from 'react-draggable';\n\nexport default class Prompt extends Component {\n\n  constructor(props) {\n    super(props);\n    this.onKeydown = this.onKeydown.bind(this);\n  }\n\n  /** Clear selection on ESC **/\n  onKeydown(evt) {\n    if (evt.which === 27) this.props.onNo();\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeydown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeydown, false);\n  }\n\n  render() {\n    const className = (this.props.type) ? `prompt ${this.props.type.toLowerCase()}` : 'prompt';\n\n    return (\n      <div className=\"clicktrap\">\n        <Draggable handle=\".prompt-header\">\n          <div className={className}>\n            <div className=\"prompt-header\">\n              <h1 className=\"title\">{this.props.title}</h1>\n            </div>\n\n            <div className=\"prompt-body\">\n              <p className=\"message\">{this.props.message}</p>\n              <p className=\"buttons\">\n                 <button className=\"btn yes\" onClick={this.props.onYes}>YES</button>\n                 <button className=\"btn outline no\" onClick={this.props.onNo}>NO</button>\n              </p>\n            </div>\n          </div>\n        </Draggable>\n      </div>\n    )\n  }\n\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport API from '../API.js';\nimport Prompt from '../../common/components/Prompt.jsx';\n\nexport default class DeleteAction extends Component {\n\n  deleteFolders(folders) {\n    const ids = folders.map(f => f.id);\n    if (ids.length > 0) {\n      return ids.length === 1 ?\n        API.deleteFolder(ids[0]) : API.bulkDeleteFolders(ids);\n    } else {\n      return new Promise((resolve) => { resolve(); });\n    }\n  }\n\n  deleteDocuments(documents) {\n    const ids = documents.map(d => d.id);\n\n    if (ids.length > 0) {\n      return ids.length === 1 ? (\n        this.props.view === 'MY_DOCUMENTS' ?\n          API.deleteDocument(ids[0]) : API.unshareDocument(ids[0]) \n      ) : (\n        this.props.view === 'MY_DOCUMENTS' ?\n          API.bulkDeleteDocuments(ids) : API.bulkUnshareDocuments(ids)\n      )\n    } else {\n      return new Promise((resolve) => { resolve(); });\n    }\n  }\n\n  executeDelete() {\n    const folders = this.props.selection.filter(i => i.type === 'FOLDER');\n    const documents = this.props.selection.filter(i => i.type === 'DOCUMENT');\n\n    if (folders.length + documents.length > 0) {\n      this.props.onStart();\n\n      this.deleteDocuments(documents)\n          .then(() => this.deleteFolders(folders))\n          .then(() => {\n            this.props.onSuccess();\n          }).catch((error) => {\n            this.props.onError(error);\n          });\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const message = (this.props.view === 'MY_DOCUMENTS') ?\n      \"You are about to permanently delete the selected documents. Are you sure?\" :\n      \"This will remove the selected documents from your shared documents list. Are you sure?\";\n\n    return ReactDOM.createPortal(\n      <Prompt \n        title=\"Delete\"\n        type=\"WARNING\"\n        message={message}\n        onNo={this.props.onCancel}\n        onYes={this.executeDelete.bind(this)} />,\n\n      document.body\n    )\n  }\n\n}","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Search from './search/Search.jsx';\nimport HeaderIcon from '../../common/content/HeaderIcon.jsx';\nimport Breadcrumbs from '../../common/content/Breadcrumbs.jsx';\nimport DeleteAction from '../actions/DeleteAction.jsx';\n\nexport default class Header extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      action: null \n    };\n\n    document.body.addEventListener('keydown', this.onKeydown.bind(this), false);\n  }\n\n  onKeydown(evt) {\n    if (this.props.selection.length > 0 && evt.which === 46)\n      this.setState({ action: 'DELETE' });\n  }\n\n  /** User clicked the DELETE button in the mini-menu */\n  startDeleteAction() {\n    this.setState({ action: 'DELETE' });\n  }\n\n  /** User clicked CANCEL in the warning prompt **/\n  cancelDelete() {\n    this.setState({ action: null });\n  }\n\n  /** Delete executed successfully **/\n  onDeleteSuccess() {\n    this.setState({ action: null }, () => {\n      this.props.afterDelete();\n    });\n  }\n\n  onDeleteError(error) {\n    this.setState({ action: null }, () => {\n      this.props.afterDelete(); // TODO error message\n    });\n  }\n\n  render() {\n    const isOpen = this.props.selection.length > 0;\n\n    return (\n      <div className=\"header\">\n        <div className=\"top-row\">\n          <Search/>\n          <div className=\"header-icons\">\n            <HeaderIcon icon=\"&#xe64a;\" className=\"help stroke7\" link=\"/help\" />\n            {/* <HeaderIcon icon=\"&#xe8ae;\" className=\"stats\" />\n            <HeaderIcon icon=\"&#xe8c1;\" className=\"notifications\" /> */}\n          </div>\n        </div>\n        <div className=\"subheader\">\n          <Breadcrumbs \n            view={this.props.view}\n            path={this.props.breadcrumbs}\n            count={this.props.docCount} />\n\n          <div className=\"subheader-icons\">\n            <CSSTransition\n              in={isOpen} \n              timeout={500} \n              classNames=\"selection-actions\">\n\n              <div className=\"selection-actions\">              \n                {/* <span className=\"share icon\">&#xf234;</span> */}\n\n                <span\n                  className=\"delete icon\" \n                  onClick={this.startDeleteAction.bind(this)}>&#xf014;</span>\n\n                {/* <span className=\"more icon\">&#xf078;</span> */}\n              </div>\n            </CSSTransition>\n\n            <HeaderIcon\n              className=\"presentation-toggle stroke7\"\n              icon={(this.props.presentation === 'TABLE') ? '\\ue645' : '\\ue636'} \n              onClick={this.props.onTogglePresentation} />\n\n            {this.state.action === 'DELETE' &&\n                <DeleteAction\n                  view={this.props.view}\n                  selection={this.props.selection}\n                  onStart={this.props.onDelete}\n                  onSuccess={this.onDeleteSuccess.bind(this)}\n                  onError={this.onDeleteError.bind(this)}\n                  onCancel={this.cancelDelete.bind(this)} />\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class MenuPopup extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onMousedown = this.onMousedown.bind(this);\n    this.onKeydown = this.onKeydown.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.onMousedown, false);\n    document.addEventListener('keydown', this.onKeydown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.onMousedown, false);\n    document.removeEventListener('keydown', this.onKeydown, false);\n  }\n\n  onMousedown(evt) {\n    const isClickOutside = !this._node.contains(evt.target);\n    if (isClickOutside) this.props.onCancel();\n  }\n\n  onKeydown(evt) {\n    if (evt.which === 27) this.props.onCancel();\n  }\n\n  render() {\n    return (\n      <div\n        ref={n => this._node = n}\n        className={`modal-menu ${this.props.className}`}>\n        <ul>\n          {this.props.menu.map(group =>\n            <li\n              key={group.group}\n              className={`group ${group.group}`}>\n\n              <ul>\n                {group.options.map(option =>\n                  <li\n                    key={option.value || option.link}\n                    className={`option${option.disabled ? ' disabled' : '' }`}\n                    onClick={(option.disabled || !option.value) ? null : this.props.onSelect.bind(this, option.value) }>\n\n                    {(option.link) ? \n                      <a href={option.link}>\n                        <span className=\"icon\">{option.icon}</span> {option.label}\n                      </a>\n                      : \n                      <React.Fragment>\n                        <span className=\"icon\">{option.icon}</span> {option.label}\n                      </React.Fragment>\n                    }\n                  </li>\n                )}\n              </ul>\n            </li>\n          )}\n        </ul>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nimport ProfileInfo from '../../../common/content/profile/ProfileInfo.jsx';\nimport MenuPopup from '../../../common/components/MenuPopup.jsx';\n\nexport default class Account extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { menuVisible: false };\n  }\n\n  onSelectMenuOption(option) {\n    if (option === 'SETTINGS')\n      window.location.href= '/settings/account';\n    else if (option === 'SIGNOUT')\n      window.location.href= '/logout';\n    else if (option === 'HELP');\n      window.location.href= '/help';\n  }\n\n  showMenu() {\n    this.setState({ menuVisible: true });\n  }\n\n  closeMenu() {\n    this.setState({ menuVisible: false });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"section account\"\n        onClick={this.showMenu.bind(this)} >\n\n        <ProfileInfo account={this.props.account} />\n\n        { this.state.menuVisible &&\n          <MenuPopup\n            className=\"account-menu\"\n            menu={[\n              { group: 'settings', options: [\n                { icon: '\\uf0ad', label: 'Account settings', link: '/settings/account' }\n              ]},\n              { group: 'general', options: [\n                { icon: '\\uf128', label: 'Help', link: '/help' },\n                { icon: '\\uf011', label: 'Sign out', link: '/logout' }\n              ]}\n            ]}\n            onSelect={this.onSelectMenuOption.bind(this)}\n            onCancel={this.closeMenu.bind(this)} />\n        }\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nimport API from '../../API.js';\nimport MenuPopup from '../../../common/components/MenuPopup.jsx';\n\nexport default class CreateNew extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { menuVisible: false };\n  }\n\n  onShowOptions() {\n    this.setState({ menuVisible: true });\n  }\n\n  onSelectOption(option) {\n    this.setState({ menuVisible: false });\n    if (option === 'FOLDER') {\n      const currentFolderId = document.location.hash.substring(1);\n      API.createFolder('Unnamed Folder', currentFolderId)\n         .then(() => this.props.onFolderCreated());\n    } else if (option === 'FILE') {\n      this._input.click();\n    }\n  }\n\n  onUploadFiles(evt) {\n    const files = Array.from(evt.target.files);\n    this.props.onUploadFiles(files);\n  }\n\n  onCancel() {\n    this.setState({ menuVisible: false });\n  }\n\n  render() {\n    return (\n      <div className=\"section create-new\">\n        <button\n          className=\"btn create-new\"\n          onClick={this.onShowOptions.bind(this)}>\n          <span className=\"icon\">&#xf067;</span>\n          <span className=\"label\">New</span>\n        </button>\n        <input\n          ref={c => this._input = c}\n          type=\"file\"\n          name=\"file\"\n          multiple\n          onChange={this.onUploadFiles.bind(this)}\n          style={{ display: 'none' }} />\n\n        {this.state.menuVisible &&\n          <MenuPopup\n            className=\"create-new\"\n            menu={[\n              { group: 'local', options: [\n                { icon: '\\uf07b', label: 'Folder', value: 'FOLDER' },\n                { icon: '\\uf15b', label: 'File upload', value: 'FILE' }\n              ]},\n\n              { group: 'remote', options: [\n                { icon: '\\uf0c1', label: 'From IIIF manifest', value: 'IIIF', disabled: true },\n                { icon: '\\uf121', label: 'From CTS service', value: 'CTS', disabled: true }\n              ]}\n            ]}\n            onSelect={this.onSelectOption.bind(this)}\n            onCancel={this.onCancel.bind(this)} />\n        }\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nclass ViewListItem extends Component {\n\n  render() {\n    return (\n      <li\n        className={this.props.current ? 'current' : null}\n        onClick={this.props.onClick}>\n        <span className=\"icon\">{this.props.icon}</span> {\n          this.props.children\n        }\n      </li>\n    )\n  }\n\n}\n\nexport default class ViewList extends Component {\n\n  render() {\n    return (\n      <div className=\"section views\">\n        <ul>\n          <ViewListItem\n            icon=\"&#xf2be;\"\n            current={this.props.currentView === 'MY_DOCUMENTS'}\n            onClick={this.props.onChangeView.bind(this, 'MY_DOCUMENTS')}>\n            My Documents\n          </ViewListItem>\n\n          <ViewListItem\n            icon=\"&#xf064;\"\n            current={this.props.currentView === 'SHARED_WITH_ME'}\n            onClick={this.props.onChangeView.bind(this, 'SHARED_WITH_ME')}>\n            Shared with me\n          </ViewListItem>\n\n          {/* <ViewListItem\n            icon=\"&#xf017;\"\n            current={this.props.currentView == 'RECENT'}\n            onClick={this.props.onChangeView.bind(this, 'RECENT')}>\n            Recent\n          </ViewListItem> */}\n        </ul>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\n\nimport Meter from '../../../common/components/Meter.jsx';\n\nexport default class Storage extends Component {\n\n  render() {\n    const dataAvailable = this.props.account && this.props.account.storage;\n    const quota = dataAvailable ? this.props.account.storage.quota_mb : 0;\n    const used = dataAvailable ? this.props.account.storage.used_mb : 0;\n\n    return (\n      <div className=\"section storage\">\n        <span className=\"icon\">&#xf1c0;</span> Storage\n        <div className=\"used-diskspace\">\n          <Meter\n            value={(quota > 0) ? used / quota : 0} />\n\n          <div className=\"label\">\n            <NumberFormat \n              displayType=\"text\"\n              value={used}\n              thousandSeparator={true} /> \n            {' of  '}\n            <NumberFormat \n              displayType=\"text\"\n              value={quota}\n              thousandSeparator={true} /> MB used\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nimport ActivityWidget from '../../common/content/activity/ActivityWidget.jsx';\nimport CollaboratorList from '../../common/content/profile/CollaboratorList.jsx';\n\nimport Account   from './sections/Account.jsx';\nimport CreateNew from './sections/CreateNew.jsx';\nimport ViewList  from './sections/Views.jsx';\nimport Storage   from './sections/Storage.jsx';\n\nexport default class Sidebar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { collaborators: [] };\n  }\n\n  render() {\n    return (\n      <div className=\"sidebar\">\n        <Account\n          account={this.props.account} />\n\n        <CreateNew \n          onFolderCreated={this.props.onFolderCreated}\n          onUploadFiles={this.props.onUploadFiles} />\n          \n        <ViewList\n          account={this.props.account}\n          currentView={this.props.currentView}\n          onChangeView={this.props.onChangeView} />\n\n        <Storage \n          account={this.props.account} /> \n\n        <ActivityWidget \n          className=\"section\" \n          width={237}\n          height={55}\n          fill=\"#4483c4\"\n          stats={this.props.account && this.props.account.stats} />\n\n        <CollaboratorList \n          className=\"section collaborators\"\n          title=\"My top collaborators\"\n          username={this.props.account && this.props.account.username} />\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nimport API from './API.js';\nimport GridPane from '../common/content/grid/GridPane.jsx';\nimport TablePane from '../common/content/table/TablePane.jsx';\nimport Readme from '../common/content/Readme.jsx';\nimport { Columns } from '../common/content/table/Columns.js';\nimport StoredUIState from '../common/StoredUIState.js';\nimport Uploader from '../common/content/upload/Uploader.jsx';\n\nimport Header from './header/Header.jsx';\nimport Sidebar from './sidebar/Sidebar.jsx';\n\nimport '../../assets/style/workspace/index.scss';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const state = {\n      account       : null,           // account info\n      view          : 'MY_DOCUMENTS', // view, as selected in sidebar (My Documents, Shared, Recent)\n      breadcrumbs   : [],             // the current folder (and parent folders) we are in\n      presentation  : 'TABLE',        // presentation mode TABLE or GRID\n      table_columns : [               // current table view columns configuration\n        \"author\",\n        \"title\",\n        \"language\",\n        \"date_freeform\",\n        \"uploaded_at\",\n        \"last_edit_at\"\n      ],\n      table_sorting : null,          // current table sorting (if any)\n      busy          : false,          // Document pane in 'busy' state? (Docs loading, action onging, etc.)\n      folders       : [],             // Folders\n      documents     : [],             // Documents in view\n      total_docs    : null,           // Total number of documents\n      readme        : null,           // Current folder readme\n      selection     : [],             // Selected items (folders and documents)\n      fileUploads   : [],             // Files currently uploading\n      urlUpload     : null            // URLs currently uploading/registering\n    };\n\n    Object.assign(state, StoredUIState.load());\n    this.state = state;\n\n    this._root = document.getElementById('app');\n\n    this.onKeydown = this.onKeydown.bind(this);\n    this.onMousedown = this.onMousedown.bind(this);\n\n    window.onhashchange = this.changeFolder.bind(this);\n  }\n\n  /** Clear selection on ESC key **/\n  onKeydown(evt) {\n    if (evt.which === 27) this.setState({ selection: [] });\n  }\n\n  /** Clear selection on click ouside the document pane **/\n  onMousedown(evt) {\n    const isClickOutside = !(\n      document.querySelector('.documents-pane').contains(evt.target) ||\n      document.querySelector('.subheader-icons').contains(evt.target)\n    );\n\n    if (isClickOutside) this.setState({ selection: [] });\n  }\n\n  componentDidMount() {\n    this._root.addEventListener('keydown', this.onKeydown, false);\n    this._root.addEventListener('mousedown', this.onMousedown, false);\n\n    this.fetchAccountData();\n    this.refreshCurrentView();\n  }\n\n  componentWillUnmount() {\n    this._root.removeEventListener('keydown', this.onKeydown, false);\n    this._root.removeEventListener('mousedown', this.onMousedown, false);\n  }\n\n  getDisplayConfig() {\n    if (this.state.presentation === 'GRID')\n      return; // No configs for grid view\n\n    return {\n      columns: Columns.expandAggregatedColumns(this.state.table_columns),\n      sort: this.state.table_sorting\n    };\n  }\n\n  fetchAccountData() {\n    return API.accountData().then(result => { this.setState({ account: result.data }) });\n  }\n\n  fetchMyDocuments() {\n    this.setState({ busy: true });\n    const currentFolderId = document.location.hash.substring(1);\n    return API.myDocuments(this.getDisplayConfig(), currentFolderId).then(result => {\n      this.setState({\n        breadcrumbs: result.data.breadcrumbs,\n        documents: result.data.items, \n        total_docs: result.data.total,\n        busy: false \n      });\n    });\n  }\n\n  fetchSharedWithMe() {\n    this.setState({ busy: true });\n    return API.sharedWithMe(this.getDisplayConfig()).then(result => { \n      this.setState({\n        breadcrumbs: [],\n        documents: result.data.items, \n        total_docs: result.data.total,\n        busy: false \n      }) \n    });\n  }\n\n  /** Switch between different document views (currently: 'my' vs. 'shared') **/\n  changeView(view) {\n    if (this.state.view !== view) {\n      StoredUIState.save('view', view);\n\n      this.setState({\n        view: view,\n        documents:[]\n      }, () => {\n        (view === 'MY_DOCUMENTS') ? this.fetchMyDocuments() : this.fetchSharedWithMe();\n      });\n    }\n  }\n\n  /** Reloads the current view from the API */\n  refreshCurrentView() {\n    if (this.state.view === 'MY_DOCUMENTS')\n      return this.fetchMyDocuments();\n    else \n      return this.fetchSharedWithMe();\n  }\n\n  changeFolder() {\n    this.refreshCurrentView();\n  }\n\n  /** Toggles the view presentation (table vs. grid) **/\n  togglePresentation() {\n    this.setState(before => { \n      const p = (before.presentation === 'TABLE') ? 'GRID' : 'TABLE';\n      StoredUIState.save('presentation', p);\n      return { presentation: p };\n    });\n  }\n\n  onChangeColumnPrefs(columns) {\n    StoredUIState.save('table_columns', columns);\n    this.setState({ table_columns: columns }, () => {\n      this.refreshCurrentView();\n    });\n  }\n  \n  onSortTable(sorting) {\n    StoredUIState.save('table_sorting', sorting);\n    this.setState({ table_sorting: sorting }, () => {\n      this.refreshCurrentView();\n    });\n  }\n\n  /** File selection **/\n  onSelect(selection) {\n    this.setState({ selection: selection });\n  }\n\n  onRenameFolder(folder, title) {\n    API.renameFolder(folder.id, title)\n       .then(() => this.refreshCurrentView());\n  }\n\n  /** File upload **/\n  startUpload(files) {\n    this.setState({ \n      fileUploads: files, \n      urlUpload: null\n    });\n  }\n\n  /** Remote file registration (IIIF, CTS) **/\n  startRegisterRemoteSource(url) {\n    this.setState({ \n      fileUploads: [],\n      urlUpload: url\n    });\n  } \n\n  onUploadComplete() {\n    this.setState({ \n      view: 'MY_DOCUMENTS', // Force view back to 'My Documents'\n      fileUploads: [], \n      urlUpload: null \n    }, () => {\n      this.refreshCurrentView()\n        .then(this.fetchAccountData.bind(this));\n    });\n  }\n\n  setBusy(busy) {\n    this.setState({ busy: busy });\n  }\n\n  afterDelete() {\n    this.refreshCurrentView()\n      .then(() => this.setState({ busy: false, selection: []}))\n      .then(this.fetchAccountData.bind(this));\n  }\n\n  render() {\n    const isUploading = this.state.fileUploads.length > 0 || this.state.urlUpload;\n\n    return(\n      <React.Fragment>\n        <Sidebar\n          account={this.state.account}\n          onFolderCreated={this.refreshCurrentView.bind(this)}\n          onUploadFiles={this.startUpload.bind(this)}\n          currentView={this.state.view}\n          onChangeView={this.changeView.bind(this)} />\n\n        <div className=\"container\">\n          <Header\n            view={this.state.view}\n            breadcrumbs={this.state.breadcrumbs}\n            docCount={this.state.total_docs}\n            selection={this.state.selection}\n            presentation={this.state.presentation}\n            onDelete={this.setBusy.bind(this, true)}\n            afterDelete={this.afterDelete.bind(this)}\n            onTogglePresentation={this.togglePresentation.bind(this)} />\n\n          {this.state.presentation === 'TABLE' ?\n            <TablePane\n              view={this.state.view}\n              folders={this.state.folders}\n              documents={this.state.documents}\n              columns={this.state.table_columns}\n              sorting={this.state.table_sorting}\n              busy={this.state.busy}\n              selection={this.state.selection}\n              disableFiledrop={this.state.view !== 'MY_DOCUMENTS'}\n              onSort={this.onSortTable.bind(this)}\n              onSelect={this.onSelect.bind(this)} \n              onDropFiles={this.startUpload.bind(this)} \n              onDropURL={this.startRegisterRemoteSource.bind(this)} \n              onChangeColumnPrefs={this.onChangeColumnPrefs.bind(this)} \n              onRenameFolder={this.onRenameFolder.bind(this)}>\n\n              {this.state.readme && <Readme>{this.state.readme}</Readme> }\n            </TablePane>\n            :\n            <GridPane\n              folders={this.state.folders}\n              documents={this.state.documents}\n              busy={this.state.busy}\n              selection={this.state.selection}\n              onSelect={this.onSelect.bind(this)} \n              disableFiledrop={this.state.view !== 'MY_DOCUMENTS'}\n              onDropFiles={this.startUpload.bind(this)}\n              onDropURL={this.startRegisterRemoteSource.bind(this)} >\n              \n              {this.state.readme && \n                <Readme>{this.state.readme}</Readme> }\n            </GridPane>\n          }\n        </div>\n\n        { isUploading && \n          <Uploader\n            files={this.state.fileUploads} \n            url={this.state.urlUpload}\n            onUploadComplete={this.onUploadComplete.bind(this)} /> \n        }\n      </React.Fragment>\n    )\n  }\n\n}\n\nrender(<App />, document.getElementById('app'));\n"],"sourceRoot":""}