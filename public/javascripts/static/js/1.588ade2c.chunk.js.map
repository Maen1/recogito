{"version":3,"sources":["common/content/upload/DropzoneDecoration.jsx","common/content/Breadcrumbs.jsx","common/content/activity/ActivityWidget.jsx","common/content/profile/CollaboratorList.jsx","common/content/profile/Avatar.jsx","common/content/profile/ProfileInfo.jsx","common/content/table/rows/BaseRowComponent.jsx","common/content/table/rows/HeaderRow.jsx","common/content/table/rows/DocumentRow.jsx","common/content/table/rows/FolderRow.jsx","common/components/Modal.jsx","common/content/table/preferences/ColumnOrder.jsx","common/content/table/preferences/PreferencesModal.jsx","common/content/table/TablePane.jsx","common/content/grid/Folder.jsx","common/content/grid/Document.jsx","common/content/grid/GridPane.jsx","common/content/table/Columns.js","common/StoredUIState.js","common/content/Readme.jsx","common/content/Selection.js","common/content/HeaderIcon.jsx"],"names":["AnimatedDiv","posed","div","open","bottom","transition","ease","duration","closed","DropzoneDecoration","props","_this","Object","_home_simonr_Workspaces_pelagios_recogito2_workspace_frontend_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_simonr_Workspaces_pelagios_recogito2_workspace_frontend_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_simonr_Workspaces_pelagios_recogito2_workspace_frontend_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","visible","setState","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","pose","Component","VIEW_LABELS","MY_DOCUMENTS","SHARED_WITH_ME","Breadcrumbs","title","view","label","href","path","map","b","concat","id","key","count","children","LINE_STYLE","stroke","strokeWidth","AXIS_STYLE","fontSize","color","tickFormatter","tick","Intl","DateTimeFormat","month","format","Date","ActivityWidget","n","toTimestamp","empty","Array","fill","reduce","arr","_","last","length","push","reverse","timestamp","value","t","toTime","getTime","createEmptySeries","timeseries","stats","over_time","parse","date","padTimeseries","react_number_format__WEBPACK_IMPORTED_MODULE_10___default","displayType","total_contributions","thousandSeparator","recharts__WEBPACK_IMPORTED_MODULE_6__","width","height","barCategoryGap","data","computeChart","recharts__WEBPACK_IMPORTED_MODULE_7__","strokeDasharray","horizontal","recharts__WEBPACK_IMPORTED_MODULE_8__","type","dataKey","axisLine","tickSize","tickCount","tickLine","domain","padding","left","right","recharts__WEBPACK_IMPORTED_MODULE_9__","CollaboratorList","collaborators","fetchCollaborators","_this2","username","axios","get","then","result","Fragment","user","_Avatar_jsx__WEBPACK_IMPORTED_MODULE_7__","Avatar","str","hash","i","charCodeAt","stringToHslColor","style","backgroundColor","charAt","toUpperCase","Identity","url","replace","dataAvailable","account","member_since","_Avatar_jsx__WEBPACK_IMPORTED_MODULE_6__","real_name","year","day","bio","website","formatURL","BaseRowComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateTotalRowSpan","next","_totalSpan","columns","total","field","Columns","getSpan","HeaderRow","react_default","prototype","onClick","onSort","bind","HEADER_NAMES","sortColumn","sortAsc","ICONS","TEXT_PLAIN","TEXT_TEIXML","IMAGE_UPLOAD","IMAGE_IIIF","DATA_CSV","FORMATTERS","language","uploaded_at","datetime","last_edit_at","lib_default","public_visibility","visibility","access_level","level","annotations","number_format_default","status_ratio","ratio","verified","unverified","not_identifiable","pctGreen","pctYellow","labels","tooltip","slice","AGGREGATE_FIELDS","agg_document","item","author","DocumentRow","substring","formatter","undefined","filetypes","selected","startsWith","createAggregateField","createField","src","alt","FolderRow","editable","evt","_input","select","preventDefault","stopPropagation","target","_this3","which","onRename","_this4","ref","makeEditable","onChange","onKeyDown","onKeyPress","Modal","react_draggable_default","handle","onClose","SortableItem","SortableElement","_ref","SortableList","SortableContainer","_ref2","items","idx","index","ColumnOrder","onSortEnd","e","oldIndex","newIndex","PreferencesModal","states","COLUMNS","forEach","isChecked","includes","checked","toAppend","filter","checkAll","setAllRows","name","prev","indexOf","splice","arrayMove","Modal_Modal","onCancel","onClickAll","toggleOne","htmlFor","ColumnOrder_ColumnOrder","onSave","TablePane","prefsOpen","filterByView","selection","Selection","folders","documents","isShift","getModifierState","isCtrl","selectRange","selectItem","onSelect","getSelectedItems","allItems","args","FolderRow_FolderRow","onRenameFolder","DocumentRow_DocumentRow","onChangeColumnPrefs","asc","sorting","by","active","drag","files","dataTransfer","getData","hostname","document","onDropFiles","window","location","onDropURL","readme","React","Children","toArray","c","Readme","shift","tablePane","es","rowCount","rowHeight","rowRenderer","busy","HeaderRow_HeaderRow","sortBy","showPreferences","disableFiledrop","dist_es","disableClick","onDragEnter","onDrag","onDragLeave","onDrop","PreferencesModal_PreferencesModal","onSavePreferences","Folder","Document","isStacked","fileCount","onDoubleClick","GridPane","itemsPerRow","fromIndex","itemsInRow","Math","min","renderedItems","rowIdx","Folder_Folder","Document_Document","file_count","gridPane","itemCount","floor","ceil","COLUMNS_SHARED_WITH_ME","date_freeform","last_edit_by","activity","owner","shared_by","COLUMN_WIDTH","AGGREGATE_COLUMNS","_home_simonr_Workspaces_pelagios_recogito2_workspace_frontend_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","w","StoredUIState","localStorage","getItem","JSON","prefixed","setItem","stringify","INITIAL_STATE","editing","modifiedContent","onDelete","onUpdate","content","react_markdown__WEBPACK_IMPORTED_MODULE_6___default","source","onEdit","react_sane_contenteditable__WEBPACK_IMPORTED_MODULE_7__","tagName","multiLine","editOnOpen","renderEdit","renderView","_allItems","_selection","isCtrlPressed","thisIdx","toIdx","selectedIndices","minIdx","apply","maxIdx","max","isOutside","from","to","HeaderIcon","link","icon"],"mappings":"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","file":"static/js/1.588ade2c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport posed from 'react-pose';\n\nconst AnimatedDiv = posed.div({\n  open:   { \n    bottom: '30px',\n    transition: {\n      ease: 'easeOut',\n      duration:200\n    }\n  },\n  closed: { bottom: '-140px' }\n});\n\nexport default class DropzoneDecoration extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { visible: false };\n  }\n\n  componentDidMount() {\n    this.setState({ visible: true });\n  }\n\n  render() {\n    return (\n      <div className=\"dropzone-decoration\">\n        <AnimatedDiv className=\"inner\" pose={this.state.visible ? 'open' : 'closed'}>\n          <span className=\"icon\">&#xf0ee;</span>\n          <p className=\"instructions\">\n            Drop files or IIIF manifest URLs to add them to your workspace.\n          </p>\n          <p className=\"supported\">\n            Supported formats: plain text (UTF-8), TEI/XML, image files, CSV (UTF-8)\n          </p>\n        </AnimatedDiv>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nconst VIEW_LABELS = {\n  MY_DOCUMENTS: 'My Documents',\n  SHARED_WITH_ME: 'Shared with me'\n}\n\nexport default class Breadcrumbs extends Component {\n\n  render() {\n    const title = this.props.view ? VIEW_LABELS[this.props.view] : this.props.label;\n\n    return (\n      <div className=\"breadcrumbs\">\n        <h2>\n          <a className=\"root\" href=\"#\">{title}</a>\n\n          {this.props.path && this.props.path.map(b => \n            <a className=\"folder\" href={`#${b.id}`} key={b.id}>{b.title}</a>\n          )}\n        </h2>\n        \n        {this.props.count !== null &&\n          <span className=\"count\">{`(${this.props.count})`}</span>\n        }\n\n        {this.props.children}\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { Bar, BarChart, CartesianGrid, XAxis } from 'recharts';\nimport NumberFormat from 'react-number-format';\n\nconst LINE_STYLE = {\n  stroke: '#c2c2c2', \n  strokeWidth:1\n}\n\nconst AXIS_STYLE = {\n  fontSize:\"12px\",\n  color:\"#3f3f3f\"\n}\n\nconst WEEK = 3600000 * 24 * 7; // A week in milliseconds\n\nconst tickFormatter = (tick) => new Intl.DateTimeFormat('en-GB', {\n  month: 'short'\n}).format(new Date(tick));\n\nexport default class ActivityWidget extends Component {\n\n  /** Helper that generates an empty time series of N buckets with value 0 */\n  createEmptySeries(n, toTimestamp) {\n    const empty = new Array(n);\n    empty.fill(0); // Needs to contain *something* for .reduce to work\n\n    const timestamps = empty.reduce((arr, _) => {\n      const last = arr[arr.length - 1];\n      arr.push(last - WEEK);\n      return arr;\n    }, [ toTimestamp - WEEK ]).reverse();\n\n    return timestamps.map(timestamp => {\n      return { timestamp: timestamp, value: 0 };\n    });\n  }\n\n  padTimeseries(t) {\n    const toTime = t.length > 0 ? t[0].timestamp : new Date().getTime();\n    const padding = this.createEmptySeries(19 - t.length, toTime);\n    return padding.concat(t);\n  }\n\n  computeChart() {\n    // Data comes as ISO strings - convert\n    const timeseries = this.props.stats.over_time.map(t => {\n      return { timestamp: Date.parse(t.date), value: t.value };\n    });\n\n    if (timeseries.length < 20) {\n      return this.padTimeseries(timeseries);\n    } else {\n      return timeseries;\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.props.className ? \n        `activity-widget ${this.props.className}` : \"activity-widget\"}>\n\n        <h2>Activity \n          {this.props.stats && \n            <span className=\"count\">\n              <NumberFormat \n                displayType=\"text\"\n                value={this.props.stats.total_contributions}\n                thousandSeparator={true} /> edits\n            </span>\n          }\n        </h2>\n\n        {this.props.stats &&\n          <BarChart \n            width={this.props.width} \n            height={this.props.height} \n            barCategoryGap={1.5}\n            data={this.computeChart()} >\n\n            <CartesianGrid \n              strokeDasharray=\"3\" \n              horizontal={false}/>\n\n            <XAxis \n              type=\"number\"\n              dataKey=\"timestamp\"\n\n              axisLine={LINE_STYLE} \n\n              tick={AXIS_STYLE}\n              tickSize={4}\n              tickCount={6}\n              tickLine={LINE_STYLE}\n              tickFormatter={tickFormatter}\n\n              height={20}\n              domain={['dataMin', 'dataMax']}\n              padding={{ left: 5, right: 5 }} />\n\n            <Bar \n              dataKey=\"value\" \n              fill={this.props.fill} />\n\n          </BarChart>\n        }\n      </div>\n    )\n  }\n\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Avatar from './Avatar.jsx';\n\nexport default class CollaboratorList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { collaborators: [] };\n    this.fetchCollaborators(props);\n  }\n\n  componentWillReceiveProps(props) {\n    this.fetchCollaborators(props);\n  }\n\n  fetchCollaborators(props) {\n    if (props.username)\n      axios\n        .get(`/api/account/${props.username}/collaborators`)\n        .then(result => this.setState({ collaborators: result.data }));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.collaborators.length > 0 &&\n          <div className={this.props.className ? `collaborator-list ${this.props.className}` : 'collaborator-list'}>\n            <h2>{this.props.title}</h2>\n            <ul>\n              {this.state.collaborators.map(user => \n                <li key={user.username}>\n                  <a href={`/${user.username}`} title={user.username}>\n                    <Avatar username={user.username} />\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n      </React.Fragment>\n    )\n  }\n\n}","import React, { Component } from 'react';\n\nexport default class Avatar extends Component {\n\n  // https://medium.com/@pppped/compute-an-arbitrary-color-for-user-avatar-starting-from-his-username-with-javascript-cd0675943b66\n  stringToHslColor(str) {\n    let hash = 0;\n    for (let i=0; i<str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash % 360;\n  }\n\n  render() {\n    const color = this.props.username ? `hsl(${this.stringToHslColor(this.props.username)}, 35%, 65%)` : '#e2e2e2';\n\n    return (\n      <div className=\"avatar\" style={{ backgroundColor: color }}>\n        <div className=\"inner\">\n          { this.props.username && this.props.username.charAt(0).toUpperCase() }\n        </div>\n      </div>\n    )\n  }\n\n}","import React, { Component } from 'react';\n\nimport Avatar from './Avatar.jsx';\n\nexport default class Identity extends Component {\n\n  formatURL(url) {\n    return url.replace(/^https?:\\/\\//i, '');\n  }\n\n  render() {\n    const dataAvailable = \n      this.props.account && \n      this.props.account.username &&\n      this.props.account.member_since;\n      \n    return (\n      <div className=\"identity\">\n        <div className=\"user\">\n          <Avatar username={dataAvailable && this.props.account.username} />\n\n          <h1>\n            { dataAvailable ?\n                ((this.props.account.real_name) ? \n                  this.props.account.real_name : this.props.account.username) :\n\n                (<span className=\"placeholder\" />) }\n          </h1>\n\n          <p className=\"member-since\">\n            { dataAvailable ?\n              <React.Fragment>\n                Joined on { new Intl.DateTimeFormat('en-GB', {\n                  year : 'numeric',\n                  month: 'short',\n                  day  : '2-digit'\n                }).format(new Date(this.props.account.member_since)) }\n              </React.Fragment> : <span className=\"placeholder\" />\n            }\n          </p>\n        </div>\n\n        <div className=\"user-extended\">\n          { dataAvailable && this.props.account.bio &&\n            <p className=\"bio\">{this.props.account.bio}</p> }\n\n          { dataAvailable && this.props.account.website && \n            <p className=\"homepage\">\n              <a href={this.props.account.website}>{this.formatURL(this.props.account.website)}</a>\n            </p>\n          }\n        </div>\n      </div>\n    )\n  }\n\n}\n","import { Component } from 'react';\n\nimport { Columns } from '../Columns.js';\n\nexport default class BaseRowComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.updateTotalRowSpan(props);\n  }\n\n  componentWillReceiveProps(next) {\n    this.updateTotalRowSpan(next);\n  }\n\n  /** Updates total unit width requirement for current row layout **/\n  updateTotalRowSpan(props) {\n    this._totalSpan = props.columns.reduce((total, field) => total + Columns.getSpan(field), 0);\n  }\n\n  getWidth(field) {\n    const span = Columns.getSpan(field);\n    return span / this._totalSpan;\n  }\n  \n}","import React from 'react';\n\nimport BaseRowComponent from './BaseRowComponent.jsx';\nimport { HEADER_NAMES } from '../Columns.js';\n\nexport default class HeaderRow extends BaseRowComponent {\n\n  render() {\n    return (\n      <div className=\"column-labels\">\n        {this.props.columns.map(field =>\n          <span\n            key={field}\n            style={{ width: `${100 * super.getWidth(field)}%` }}\n            className={`label ${field}`}\n            onClick={this.props.onSort.bind(this, field)}>\n            <span className=\"inner-wrapper\">\n              <span className=\"inner\">\n                {HEADER_NAMES[field] || field}\n              </span>\n              {this.props.sortColumn === field &&\n                <span className=\"sort icon\">\n                  <span className=\"inner\">\n                    {(this.props.sortAsc) ? '\\ue688' : '\\ue682' }\n                  </span>\n                </span>\n              }\n            </span>\n          </span>\n        )}\n      </div>\n    )\n  }\n\n}\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\nimport TimeAgo from 'react-timeago';\n\nimport BaseRowComponent from './BaseRowComponent.jsx';\n\n/** Icons for possible content type values **/\nconst ICONS = {\n  TEXT_PLAIN   : 'icon_text.png',\n  TEXT_TEIXML  : 'icon_tei.png',\n  IMAGE_UPLOAD : 'icon_image.png',\n  IMAGE_IIIF   : 'icon_iiif.png',\n  DATA_CSV     : 'icon_csv.png'\n};\n\n/** Formatting rules for possible field types **/\nconst FORMATTERS = {\n  language: (language) => \n    language.toUpperCase(),\n\n  uploaded_at: (datetime) => \n    new Intl.DateTimeFormat('en-GB', {\n      year : 'numeric',\n      month: 'short',\n      day  : '2-digit'\n    }).format(new Date(datetime)),\n  \n  last_edit_at: (datetime) => \n    <TimeAgo date={datetime} />,\n\n  public_visibility: (visibility) => {\n    if (visibility === 'PUBLIC') \n      return ( <span className=\"icon\" title=\"Open to anyone\">&#xf09c;</span> );\n    else if (visibility === 'WITH_LINK')\n      return ( <span className=\"icon\" title=\"Open to anyone with the link\">&#xf0c1;</span> );\n    else \n      return ( <span className=\"icon\" title=\"Private\">&#xf023;</span> );\n  },\n\n  access_level: (level) => {\n    if (level === 'ADMIN')\n      return ( <span className=\"icon\" title=\"ADMIN\">&#xf0ad;</span> );\n    else if (level === 'WRITE')\n      return ( <span className=\"icon\" title=\"WRITE\">&#xf040;</span> );\n    else\n      return ( <span className=\"icon\" title=\"READ\">&#xf06e;</span> );\n  },\n\n  annotations: (annotations) =>\n    <NumberFormat \n      displayType=\"text\"\n      value={annotations}\n      thousandSeparator={true} />,\n\n  status_ratio: (ratio) => {\n    const total = ratio.verified + ratio.unverified + ratio.not_identifiable;\n    const pctGreen = ratio.verified / total * 100;\n    const pctYellow = ratio.not_identifiable / total * 100;\n\n    const labels = {\n      'verified': 'verified',\n      'unverified': 'unverified',\n      'not_identifiable': 'flagged'\n    }\n\n    const tooltip = ['verified', 'unverified', 'not_identifiable'].reduce((tooltip, next) => {\n      const count = ratio[next];\n      if (count === 0)\n        return tooltip;\n      else\n        return `${tooltip} ${count} ${labels[next]},`;\n    }, '').slice(0, -1);\n\n    return (\n      <span className=\"bar\" title={tooltip}>\n        <span className=\"verified\" style={{ width: `${pctGreen}%` }} />\n        <span className=\"not_identifiable\" style={{ width: `${pctYellow}%` }} />\n      </span>\n    )\n  }\n\n};\n\n/** Rules for aggregate fields **/\nconst AGGREGATE_FIELDS = {\n  agg_document: (item) => (item.author) ?\n                            `${item.author}, ${item.title}` : item.title\n};\n\nexport default class DocumentRow extends BaseRowComponent {\n\n  createAggregateField(url, field) {\n    return (\n      <a \n        key={field}\n        href={url} \n        className={field.substring(4)}\n        style={{ width: `${100 * super.getWidth(field)}%` }}>\n\n        {AGGREGATE_FIELDS[field](this.props.item)}\n      </a>\n    )\n  }\n\n  createField(url, field) {\n    const formatter = FORMATTERS[field];\n\n    const value = this.props.item[field] !== undefined ? \n      (formatter ? formatter(this.props.item[field]) : this.props.item[field]) :\n      ''; // empty value\n\n    return (\n      <a \n        key={field}\n        href={url}\n        className={field}\n        style={{ width: `${100 * super.getWidth(field)}%` }}>{value}</a>\n    )\n  }\n\n  render() {\n    const type = this.props.item.filetypes[0];\n    const url = `document/${this.props.item.id}/part/1/edit`;\n\n    return (\n      <div\n        className={`row${(this.props.selected) ? ' selected' : ''}`}\n        style={this.props.style}\n        onClick={this.props.onClick} >\n        \n        { this.props.columns.map(field => field.startsWith('agg_') ? \n          this.createAggregateField(url, field) : this.createField(url, field)) }\n\n        <span className={`type icon ${type}`}>\n          <img src={`/assets/images/${ICONS[type]}`} alt={`icon type ${type}`} />\n        </span>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class FolderRow extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      editable: false,\n      title: this.props.item.title \n    }\n  }\n\n  componentWillReceiveProps(next) {\n    this.setState({ \n      editable: false,\n      title: next.item.title \n    });\n  }\n\n  makeEditable(evt) {\n    this.setState({\n      editable: true \n    },() => this._input.select());\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  onChange(evt) {\n    this.setState({ title: evt.target.value });\n  }\n\n  onKeyPress(evt) {\n    if (evt.which === 13) {\n      this.setState({ \n        editable: false\n      }, () => this.props.onRename(this.props.item, this.state.title));\n    }\n  }\n\n  render() {\n    return (\n      <a\n        href={`#${this.props.item.id}`} \n        style={this.props.style}\n        className={`row folder${(this.props.selected) ? ' selected' : ''}`}\n        onClick={this.props.onClick}>\n\n        <span className=\"folder-title\">\n          {this.state.editable ? \n            <input \n              ref={i => this._input = i}\n              value={this.state.title}\n              onClick={this.makeEditable.bind(this)}\n              onChange={this.onChange.bind(this)}\n              onKeyDown={this.onKeyPress.bind(this)} />\n          : <span\n              className=\"editable\" \n              onClick={this.makeEditable.bind(this)} >{this.state.title}</span> }\n        </span>\n\n        <span className=\"type icon\">&#xf07b;</span>\n      </a>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport Draggable from 'react-draggable';\n\nexport default class Modal extends Component {\n\n  render() {\n    return (\n      <div className={`clicktrap ${this.props.className}`}>\n        <div className=\"modal-wrapper\">\n          <Draggable handle=\".modal-header\">\n            <div className=\"modal\">\n              <div className=\"modal-header\">\n                <h1 className=\"title\">{this.props.title}</h1>\n                <button\n                  className=\"close nostyle\"\n                  onClick={this.props.onClose}>&#xe897;</button>\n              </div>\n\n              <div className=\"modal-body\">\n                {this.props.children}\n              </div>\n            </div>\n          </Draggable>\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\n\nimport { HEADER_NAMES } from '../Columns.js';\n\nconst SortableItem = SortableElement(({ label }) =>\n  <div className=\"card\">{label}</div>\n);\n\nconst SortableList = SortableContainer(({ items }) =>\n  <div className=\"column-order\">\n    {items.map((item, idx) => (\n      <SortableItem key={`card-${idx}`} index={idx} label={HEADER_NAMES[item]} />\n    ))}\n  </div>\n);\n\nexport default class ColumnOrder extends Component {\n\n  render() {\n    return (\n      <SortableList\n        items={this.props.items}\n        onSortEnd={e => this.props.onSortEnd(e.oldIndex, e.newIndex)} />\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport Modal from '../../../components/Modal.jsx';\nimport ColumnOrder from './ColumnOrder.jsx';\n\nimport { COLUMNS, HEADER_NAMES } from '../Columns.js';\n\nexport default class PreferencesModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: props.columns.slice(0)\n    }\n  }\n\n  componentWillReceiveProps(next) {\n    if (next.columns !== this.props.columns)\n      this.setState({ columns: next.columns.slice(0) });\n  }\n\n  /** Computes a map (fieldname -> checked) from the current columns state **/\n  getCheckboxStates(props) {\n    const states = {};\n\n    COLUMNS.forEach(field => {\n      const isChecked = this.state.columns.includes(field);\n      states[field] = isChecked;\n    });\n\n    return states;\n  }\n\n  /** Sets visibility for all rows to the given boolean value **/\n  setAllRows(checked) {\n    const checkAll = () => {\n      const toAppend = \n        COLUMNS.filter(field => !this.state.columns.includes(field));\n\n      this.setState({ columns: this.state.columns.concat(toAppend) });\n    };\n\n    const uncheckAll = () => {\n      this.setState({ columns: [] });\n    };\n\n    if (checked) \n      checkAll();\n    else\n      uncheckAll();\n  }\n\n  /**\n   * Clicking 'ALL' either checks all boxes or - if all are currently\n   * checked, unchecks them.\n   */\n  onClickAll() {\n    const allRowsChecked = COLUMNS.length === this.state.columns.length;\n    if (allRowsChecked)\n      this.setAllRows(false);\n    else\n      this.setAllRows(true);\n  }\n\n  /** Toggles the checkbox with the given name **/\n  toggleOne(name) {\n    this.setState(prev => {\n      const idx = prev.columns.indexOf(name);\n      if (idx < 0)\n        prev.columns.push(name);\n      else\n        prev.columns.splice(idx, 1);        \n    \n      return prev;\n    });\n  }\n\n  onSort(oldIndex, newIndex) {\n    this.setState({\n      columns: arrayMove(this.state.columns, oldIndex, newIndex)\n    });\n  }\n\n  render() {\n    // Helper to create a single checkbox + label row\n    const createRow = (field) =>\n      <li key={field}>\n        <input\n          type=\"checkbox\"\n          id={field}\n          name={field}\n          checked={this.state.columns.includes(field)}\n          onChange={this.toggleOne.bind(this, field)} />\n        <label htmlFor={field}>{HEADER_NAMES[field]}</label>\n      </li>\n\n    return (\n      <Modal\n        className=\"preferences\"\n        title=\"Configure Columns\"\n        onClose={this.props.onCancel}>\n\n        <div className=\"scroll-pane\">\n          <div className=\"selected-columns\">\n            <button\n              className=\"all nostyle\"\n              onClick={this.onClickAll.bind(this)}>All</button>\n            <ul>\n              { COLUMNS.map(createRow) }\n            </ul>\n          </div>\n\n          <ColumnOrder\n            items={this.state.columns} \n            onSortEnd={this.onSort.bind(this)} />\n        </div>\n\n        <div className=\"buttons\">\n          <button\n            className=\"btn\"\n            onClick={this.props.onSave.bind(this, this.state.columns)}>Save</button>\n\n          <button \n            className=\"btn outline\"\n            onClick={this.props.onCancel}>Cancel</button>\n        </div>\n      </Modal>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { AutoSizer, List } from 'react-virtualized';\nimport Dropzone from 'react-dropzone'\n\nimport { Columns } from './Columns.js';\nimport DropzoneDecoration from '../upload/DropzoneDecoration.jsx';\nimport Readme from '../Readme.jsx';\nimport Selection from '../Selection.js';\n\nimport HeaderRow from './rows/HeaderRow.jsx';\nimport DocumentRow from './rows/DocumentRow.jsx';\nimport FolderRow from './rows/FolderRow.jsx';\nimport PreferencesModal from  './preferences/PreferencesModal.jsx';\n\nexport default class TablePane extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      prefsOpen: false,\n      columns: Columns.filterByView(props.columns, props.view),\n      selection: new Selection(props.folders.concat(props.documents), props.selection)\n    }\n  }\n\n  /** Set derived state **/\n  componentWillReceiveProps(next) {\n    this.setState({ \n      columns: Columns.filterByView(next.columns, next.view),\n      selection: new Selection(next.folders.concat(next.documents), next.selection)\n    });\n  }\n\n  /** Handle click/SHIFT+click/CTRL+click selection via Selection helper class */\n  onClick(evt, item, idx) {\n    const isShift = evt.getModifierState(\"Shift\");\n    const isCtrl = evt.getModifierState(\"Control\");\n\n    // Is this a selection or deselection?\n    const isSelectAction = \n      isShift || isCtrl || !this.props.selection.includes(item);\n\n    if (isSelectAction) {\n      if (isShift)\n        this.state.selection.selectRange(idx);\n      else\n        this.state.selection.selectItem(item, isCtrl);\n\n      this.props.onSelect(this.state.selection.getSelectedItems());\n      evt.preventDefault();\n    }\n  }\n\n  rowRenderer() {\n    const allItems = this.props.folders.concat(this.props.documents);\n\n    return ((args) => {\n      const item = allItems[args.index];\n      const selected = this.props.selection && this.props.selection.includes(item);\n\n      if (item.type === 'FOLDER')\n        return (\n          <FolderRow \n            key={args.key} \n            style={args.style} \n            item={item} \n            selected={selected}\n            onClick={e => this.onClick(e, item, args.index)} \n            onRename={this.props.onRenameFolder} />\n        )\n      else\n        return (\n          <DocumentRow\n            key={args.key}\n            style={args.style}\n            columns={this.state.columns}\n            item={item}\n            selected={selected}\n            onClick={e => this.onClick(e, item, args.index)} />\n        )\n    })\n  }\n\n  showPreferences(visible) {\n    this.setState({ prefsOpen: visible });\n  }\n\n  onSavePreferences(columns) {\n    this.setState({ prefsOpen: false });\n    this.props.onChangeColumnPrefs(columns);\n  }\n\n  sortBy(field) {\n    const asc = this.props.sorting ?\n      this.props.sorting.by === field ? !this.props.sorting.asc : true :\n      true;\n\n    this.props.onSort({ by: field, asc: asc });\n  }\n\n  onDrag(active) {\n    this.setState({ drag: active });\n  }\n\n  onDrop(files, _, evt) {\n    const url = evt.dataTransfer.getData('URL');\n\n    const hostname = url ? (() => {\n      const a = document.createElement('a');\n      a.href = url;\n      return a.hostname;\n    })() : null;\n\n    this.setState({ drag: false });\n\n    if (files.length > 0)\n      this.props.onDropFiles(files);\n    else if (url && hostname !== window.location.hostname) // Require external link\n      this.props.onDropURL(url);\n  }\n\n  render() {\n    const readme = React.Children.toArray(this.props.children)\n      .filter(c => c.type === Readme)\n      .shift(); // First readme or undefined\n\n    const tablePane =\n      <div className=\"documents-pane table-pane\">\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              className=\"virtualized-list\"\n              width={width}\n              height={height}\n              rowCount={this.props.folders.length + this.props.documents.length}\n              rowHeight={47}\n              rowRenderer={this.rowRenderer()} />\n          )}\n        </AutoSizer>\n\n        { this.state.drag && <DropzoneDecoration /> }\n        { this.props.busy && <div className=\"busy-mask\" /> }\n      </div>\n\n    return (\n      <React.Fragment>\n        {readme}\n\n        <div className=\"documents-table-header\">\n          <HeaderRow \n            columns={this.state.columns} \n            onSort={this.sortBy.bind(this)}\n            sortColumn={this.props.sorting ? this.props.sorting.by : null} \n            sortAsc={this.props.sorting ? this.props.sorting.asc : null} />\n\n          <button\n            className=\"column-options-btn nostyle icon\"\n            onClick={this.showPreferences.bind(this, true)} >&#xf141;</button>\n        </div>\n\n        {this.props.disableFiledrop ? tablePane :\n          <Dropzone\n            className=\"dropzone\"\n            disableClick={true}\n            onDragEnter={this.onDrag.bind(this, true)}\n            onDragLeave={this.onDrag.bind(this, false)}\n            onDrop={this.onDrop.bind(this)}>\n            \n            {tablePane}\n            \n          </Dropzone>\n        }\n\n        {this.state.prefsOpen &&\n          <PreferencesModal\n            columns={this.props.columns}\n            onCancel={this.showPreferences.bind(this, false)} \n            onSave={this.onSavePreferences.bind(this)} />\n        }\n      </React.Fragment>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Folder extends Component {\n\n  render() {\n    return (\n      <div className=\"cell\">\n        <div className=\"item-wrapper\">\n          <a href=\"#\" className=\"folder\">\n            <div className=\"label\">\n              {this.props.title}\n            </div>\n          </a>\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Document extends Component {\n\n  render() {\n    const type = this.props.filetypes[0]; // TODO make more clever in the future\n    const isStacked = this.props.fileCount > 1;\n\n    return (\n      <div\n        className={`cell${(this.props.selected) ? ' selected' : ''}`}\n        onClick={this.props.onClick}\n        onDoubleClick={this.props.onDoubleClick} >\n        \n        <div className=\"inner\">\n          <div className={`item-wrapper${isStacked ? ' stacked' : ''}`}>\n            { isStacked && <div className=\"stack\" /> }\n            <a href={`document/${this.props.id}/part/1/edit`} className={`document ${type}`}>\n              <div className=\"label\">\n                {this.props.title}\n              </div>\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone'\n\nimport { AutoSizer, List } from 'react-virtualized';\n\nimport Selection from '../Selection.js';\nimport Folder from './Folder.jsx';\nimport Document from './Document.jsx';\nimport Readme from '../Readme.jsx';\n\nimport DropzoneDecoration from '../upload/DropzoneDecoration.jsx';\n\nconst ITEM_SIZE = 192;\n\n/**\n * Using the following example:\n *\n * https://stackoverflow.com/questions/46368305/how-to-make-a-list-grid-with-a-responsive-number-of-columns-using-react-virtuali\n * http://plnkr.co/edit/zjCwNeRZ7XtmFp1PDBsc?p=preview\n */\nexport default class GridPane extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: new Selection(props.folders.concat(props.documents), props.selection) \n    };\n  }\n\n  /** Set derived state **/\n  componentWillReceiveProps(next) {\n    this.setState({ \n      selection: new Selection(next.folders.concat(next.documents), next.selection)\n    });\n  }\n\n  /** Handle click/SHIFT+click/CTRL+click selection via Selection helper class */\n  onClick(evt, item, idx) {\n    const isShift = evt.getModifierState(\"Shift\");\n    const isCtrl = evt.getModifierState(\"Control\");\n\n    if (isShift)\n      this.state.selection.selectRange(idx);\n    else\n      this.state.selection.selectItem(item, isCtrl);\n\n    this.props.onSelect(this.state.selection.getSelectedItems());\n    evt.preventDefault();\n  }\n\n  onDoubleClick(item) {\n    window.location.href= `document/${item.id}/part/1/edit`;\n  }\n\n  rowRenderer(itemsPerRow, rowCount) {\n    const allItems = this.props.folders.concat(this.props.documents);\n\n    return ((args) => {\n      const fromIndex = args.index * itemsPerRow;\n      const toIndex = Math.min(fromIndex + itemsPerRow, allItems.length);\n      const itemsInRow = toIndex - fromIndex;\n\n      const renderedItems = new Array(itemsInRow).fill(undefined).map((_, rowIdx) => {\n        const idx = rowIdx + fromIndex;\n        const item = allItems[idx];\n\n        if (item.type === 'FOLDER')\n          return (\n            <Folder key={idx} title={item.title} />\n          )\n        else\n          return (\n            <Document\n              key={idx}\n              id={item.id}\n              title={item.title}\n              filetypes={item.filetypes}\n              fileCount={item.file_count}\n              selected={this.props.selection && this.props.selection.includes(item)}\n              onClick={e => this.onClick(e, item, args.index)} \n              onDoubleClick={this.onDoubleClick.bind(this, item)} />\n          )\n      });\n\n      if (itemsInRow < itemsPerRow) // Add dummies to preserve grid layout\n        renderedItems.push(new Array(itemsPerRow - itemsInRow).fill(undefined).map((_, idx) =>\n          <div className=\"cell dummy\" key={`dummy-${idx}`} />\n        ))\n\n      return (\n        <div\n          key={args.key}\n          style={args.style}\n          className=\"row\">\n          {renderedItems}\n        </div>\n      )\n    });\n  }\n\n  onDrag(active) {\n    this.setState({ drag: active });\n  }\n\n  onDrop(files, _, evt) {\n    const url = evt.dataTransfer.getData('URL');\n\n    this.setState({ drag: false });\n\n    if (files.length > 0) this.props.onDropFiles(files);\n    else if (url) this.props.onDropURL(url);\n  }\n\n  render() {\n    const readme = React.Children.toArray(this.props.children)\n      .filter(c => c.type === Readme)\n      .shift(); // First readme or undefined\n\n    const gridPane =\n      <AutoSizer>\n        {({ height, width }) => {\n          const itemCount = this.props.folders.length + this.props.documents.length;\n          const itemsPerRow = Math.floor(width / ITEM_SIZE);\n          const rowCount = Math.ceil(itemCount / itemsPerRow);\n\n          return (\n            <List\n              className=\"virtualized-grid\"\n              width={width}\n              height={height}\n              rowCount={rowCount}\n              rowHeight={ITEM_SIZE}\n              rowRenderer={this.rowRenderer(itemsPerRow, rowCount)} />\n          )\n        }}\n      </AutoSizer>\n\n    return (\n      <React.Fragment>\n        {readme}\n        <div className=\"documents-pane grid-pane\">\n          {this.props.disableFiledrop ? gridPane :\n            <Dropzone\n              className=\"dropzone\"\n              disableClick={true}\n              onDragEnter={this.onDrag.bind(this, true)}\n              onDragLeave={this.onDrag.bind(this, false)}\n              onDrop={this.onDrop.bind(this)}>\n\n              {gridPane}\n\n            </Dropzone>\n          }\n\n          { this.state.drag && <DropzoneDecoration /> }\n        </div>\n      </React.Fragment>\n    )\n  }\n\n}\n","// Columns available in all views\nconst COLUMNS_GENERAL = [\n  // Aggregate fields\n  // 'agg_document',\n\n  // Common fields\n  'author',\n  'title',\n  'language',\n  'date_freeform',\n  'uploaded_at',\n  'last_edit_at',\n  'last_edit_by',\n  'annotations',\n  'public_visibility',\n  'status_ratio'\n  // 'activity'\n];\n\n// Columns specific to SHARED_WITH_ME view\nconst COLUMNS_SHARED_WITH_ME = [\n  'owner',\n  'shared_by',\n  'access_level'\n];\n\nexport const COLUMNS = COLUMNS_GENERAL.concat(COLUMNS_SHARED_WITH_ME);\n\n// Labels to use for fields\nexport const HEADER_NAMES = {\n  // agg_document    : 'Document',\n\n  author            : 'Author',\n  title             : 'Title',\n  language          : 'Language',\n  date_freeform     : 'Date',\n  uploaded_at       : 'Uploaded at',\n  last_edit_at      : 'Last edit',\n  last_edit_by      : 'Last edit by',\n  annotations       : 'Annotations',\n  public_visibility : 'Visibility',\n  status_ratio      : 'Verification ratio',\n  activity          : 'Activity graph',\n\n  owner             : 'Document owner',\n  shared_by         : 'Shared by',\n  access_level      : 'Access'\n};\n\n// Relative width requirements per column (XL, L, M, S)\nexport const COLUMN_WIDTH = {\n  agg_document    : 'XL',\n\n  author            : 'M',\n  title             : 'L',\n  language          : 'M',\n  date_freeform     : 'M',\n  uploaded_at       : 'M',\n  last_edit_at      : 'M',\n  last_edit_by      : 'M',\n  annotations       : 'M',\n  public_visibility : 'M',\n  status_ratio      : 'M',\n  activity          : 'M',\n\n  owner             : 'M',\n  shared_by         : 'M',\n  access_level      : 'M'\n};\n\nexport const AGGREGATE_COLUMNS = {\n  agg_document: [ 'author', 'document' ]\n};\n\n// Static helper methods \nexport class Columns {\n\n  static getSpan(field) {\n    const w = COLUMN_WIDTH[field];\n    if (w === 'XL') \n      return 6;\n    else if (w === 'L')\n      return 4;\n    else if (w === 'M')\n      return 2;\n    else if (w === 'S')\n      return 1;\n  }\n\n  /** Expands agg_ columns to those that are required to build them **/\n  static expandAggregatedColumns(columns) {\n    return columns.reduce((result, field) => {\n      if (field.startsWith('agg_'))\n        result = result.concat(AGGREGATE_COLUMNS[field]);\n      else\n        // Just append\n        result.push(field);\n\n      return result;\n    }, []);\n  }\n\n  /** Removes the columns that are not applicable in the given view **/\n  static filterByView(columns, view) { \n    if (view === 'MY_DOCUMENTS')\n      // Remove columns specific to 'Shared With Me'\n      return columns.filter(c => !COLUMNS_SHARED_WITH_ME.includes(c));\n    else\n      // All\n      return columns; \n  }\n\n}","export default class StoredUIState {\n\n  static load() {\n    const state = {};\n\n    const addIfDefined = (key) => {\n      const value = localStorage.getItem(`r2.workspace.${key}`);\n      if (value) state[key] = JSON.parse(value);\n    }\n\n    ['view', 'presentation', 'table_columns', 'table_sorting'].map(addIfDefined)\n\n    return state;\n  }\n\n  static save(key, value) {\n    const prefixed = `r2.workspace.${key}`\n    localStorage.setItem(prefixed, JSON.stringify(value));\n  }\n\n}","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ContentEditable from \"react-sane-contenteditable\";\n\nconst INITIAL_STATE = {\n  editing: false,\n  modifiedContent: null\n}\n\nexport default class Readme extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  onEdit() {\n    this.setState({ editing: true });\n  }\n\n  onDelete() {\n    this.props.onDelete && this.props.onDelete();\n  }\n\n  onChange(_, value) {\n    this.setState({ modifiedContent: value });\n  }\n\n  onSave() {\n    this.props.onUpdate && this.props.onUpdate(this.state.modifiedContent);\n    this.setState(INITIAL_STATE);\n  }\n\n  onCancel() {\n    if (typeof this.props.content === 'boolean')\n      this.onDelete();\n    else\n      this.setState(INITIAL_STATE);\n  }\n\n  renderView(content) {\n    return (\n      <div className=\"readme\">\n        <div className=\"wrapper\">\n          <div className=\"textbox\">\n            <ReactMarkdown source={content} />       \n          </div>\n\n          <span className=\"buttons modify\">\n            <button\n              className=\"icon nostyle\"\n              title=\"Edit\"\n              onClick={this.onEdit.bind(this)}>&#xf040;</button>\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  renderEdit(content) {\n    return (\n      <div className=\"readme editing\">\n        <div className=\"wrapper\">\n          <ContentEditable \n            tagName=\"div\"\n            className=\"textbox\"\n            content={content} \n            editable={true} \n            multiLine={true}\n            onChange={this.onChange.bind(this)}/>            \n\n          <div className=\"editbar\">\n            <span className=\"hint\">Supports styling with <a href=\"#\">Markdown</a></span>\n            <span className=\"buttons\">\n              <button\n                className=\"label nostyle\"\n                onClick={this.onDelete.bind(this)}>Delete description</button>\n\n              <button \n                className=\"icon nostyle\"\n                onClick={this.onSave.bind(this)}>&#xf00c;</button>\n\n              <button \n                className=\"icon nostyle\"\n                onClick={this.onCancel.bind(this)}>&#xf00d;</button>\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const editOnOpen = typeof this.props.content === 'boolean';\n    const content = editOnOpen ? '' : \n      (this.state.modifiedContent ? this.state.modifiedContent : this.props.content);\n\n    return this.state.editing || editOnOpen ? this.renderEdit(content) : this.renderView(content);\n  }\n\n}\n","export default class Selection {\n    \n  constructor(allItems, selection) {\n    this._allItems = allItems;\n    this._selection = selection;\n  }\n\n  clear() {\n    this._selection = [];\n  }\n\n  isEmpty() {\n    return this._selection.length === 0;\n  }\n\n  getSelectedItems() {\n    return this._selection;\n  }\n\n  selectItem(item, isCtrlPressed) {\n    const thisIdx = this._selection.indexOf(item);\n    const isSelected = thisIdx > -1;\n\n    if (isCtrlPressed) {\n      // Toggle this item, leave the rest of the selection unchanged\n      if (isSelected)\n        this._selection.splice(thisIdx, 1);\n      else\n        this._selection.push(item);      \n    } else {\n      // Toggle state of this item and clear the rest of the selection\n      this._selection = [ item ];\n    }\n  }\n\n  /**\n   * Range selection: SHIFT + click. \n   * \n   * Behavior follows Mac conventions, cf. \n   * https://stackoverflow.com/questions/2959887/algorithm-for-shift-clicking-items-in-a-collection-to-select-them\n   */\n  selectRange(toIdx) {\n    const selectedIndices = this._selection.map(item => {\n      return this._allItems.indexOf(item);\n    });   \n    \n    const minIdx = Math.min.apply(null, selectedIndices);\n    const maxIdx = Math.max.apply(null, selectedIndices);\n\n    const isOutside = (toIdx > maxIdx) || (toIdx < minIdx);\n\n    const slice = (from, to) => this._allItems.slice(from, to + 1);\n\n    if (isOutside && toIdx > maxIdx)\n      // Expand selection downwards\n      this._selection = slice(minIdx, toIdx);\n    else if (isOutside)\n      // Expand selection upwards\n      this._selection = slice(toIdx, maxIdx);\n    else\n      // Fill from topmost\n      this._selection = slice(minIdx, toIdx);\n  }\n\n}","import React, { Component } from 'react';\n\nexport default class HeaderIcon extends Component {\n\n  render() {\n    return (\n      <div\n        className={`header-icon ${this.props.className}`}\n        onClick={this.props.onClick}>\n        {(this.props.link) ? \n          <a href={this.props.link} className=\"icon inner\">\n            {this.props.icon}\n          </a> :\n\n          <span className=\"icon inner\">\n            {this.props.icon}\n          </span>\n        }\n      </div>\n    )\n  }\n\n}\n"],"sourceRoot":""}