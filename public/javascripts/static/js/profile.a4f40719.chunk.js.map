{"version":3,"sources":["profile/API.js","profile/sidebar/Sidebar.jsx","profile/top/Search.jsx","profile/top/TopBar.jsx","profile/App.jsx"],"names":["API","axios","get","username","concat","owner","config","post","Sidebar","react_default","a","createElement","className","ProfileInfo","account","this","props","ActivityWidget","width","height","fill","stats","CollaboratorList","title","Component","Search","placeholder","TopBar","href","name","me","real_name","Fragment","src","alt","logged_in","Search_Search","loggedInAs","notLoggedIn","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","visitedAccount","presentation","table_columns","table_sorting","busy","documents","total_docs","assign","StoredUIState","load","_profileOwner","window","location","pathname","substring","_this2","fetchPublicAccountInfo","then","r","setState","data","fetchLoginStatus","reloadDocuments","_this3","fetchAccessibleDocuments","getDisplayConfig","items","total","columns","Columns","expandAggregatedColumns","sort","before","p","save","_this4","sorting","_this5","TopBar_TopBar","Sidebar_Sidebar","Breadcrumbs","label","count","HeaderIcon","icon","onClick","onTogglePresentation","bind","length","TablePane","folders","disableFiledrop","onSort","onSortTable","onChangeColumnPrefs","GridPane","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/profile.a4f40719.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class API {\n\n  static fetchLoginStatus() {\n    return axios.get('/api/me');\n  }\n\n  static fetchPublicAccountInfo(username) {\n    return axios.get(`/api/account/${username}`);\n  }\n\n  static fetchAccessibleDocuments(owner, config) {\n    return axios.post(`/api/directory/${owner}`, config);\n  }\n\n}","import React, { Component } from 'react';\n\nimport ActivityWidget from '../../common/content/activity/ActivityWidget.jsx';\nimport CollaboratorList from '../../common/content/profile/CollaboratorList.jsx';\nimport ProfileInfo from '../../common/content/profile/ProfileInfo.jsx';\n\nexport default class Sidebar extends Component {\n\n  render() {\n    return (\n      <div className=\"sidebar\">\n        <div className=\"section\">\n          <ProfileInfo account={this.props.account} />\n        </div>\n\n        <ActivityWidget \n          className=\"section\" \n          width={237}\n          height={55}\n          fill=\"#4483c4\"\n          stats={this.props.account && this.props.account.stats} />\n\n        <CollaboratorList \n          className=\"section\"\n          title=\"Top collaborators\"\n          username={this.props.account && this.props.account.username} />\n      </div>\n    );\n  }\n\n}","import React, { Component } from 'react';\n\nexport default class Search extends Component {\n\n  render() {\n    return (\n      <div className=\"search\">\n        <div className=\"wrapper\">\n          <input placeholder=\"Search Recogito...\"/>\n        </div>\n        <span className=\"icon hand-lens\">&#xf002;</span>\n      </div>\n    )\n  }\n\n}","import React, { Component } from 'react';\n\nimport Search from './Search.jsx';\n\nexport default class TopBar extends Component {\n\n  notLoggedIn() {\n    return (\n      <div className=\"not logged-in\">\n        <a href=\"/login\">Log in</a>&nbsp; | &nbsp;New to Recogito? &nbsp;<a href=\"/\">Learn more</a>\n      </div>\n    )\n  }\n\n  loggedInAs() {\n    const name = this.props.me.real_name ? this.props.me.real_name : this.props.me.username;\n\n    return (\n      <div className=\"logged-in\">\n        Logged in as <a href={`/${this.props.me.username}`}>{name}</a>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"top-bar\">\n          <div className=\"top-left\">\n            <a href=\"/my\" className=\"home\">\n              <img src=\"/assets/images/logo-recogito-small.png\" alt=\"Recogito logo\" />\n            </a>\n            { this.props.me && this.props.me.logged_in && <a href=\"/my\">My Workspace</a> }\n            <a href=\"/help\">Help</a>\n            <a href=\"/help/about\">About</a>\n\n            <Search></Search>\n          </div>\n\n          <div className=\"top-right\">\n            {this.props.me && \n              this.props.me.logged_in ? this.loggedInAs() : this.notLoggedIn()\n            }\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport API from './API.js';\n\nimport GridPane from '../common/content/grid/GridPane.jsx';\nimport TablePane from '../common/content/table/TablePane.jsx';\nimport Breadcrumbs from '../common/content/Breadcrumbs.jsx';\nimport HeaderIcon from '../common/content/HeaderIcon.jsx';\nimport StoredUIState from '../common/StoredUIState.js';\nimport Sidebar from './sidebar/Sidebar.jsx';\nimport TopBar from './top/TopBar.jsx';\nimport { Columns } from '../common/content/table/Columns.js';\n\n\nimport '../../assets/style/profile/index.scss';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const state = {\n      me             : null, // Login identity\n      visitedAccount : null,\n      presentation   : 'TABLE',\n      table_columns  : [\n        \"author\",\n        \"title\",\n        \"language\",\n        \"date_freeform\",\n        \"uploaded_at\",\n        \"last_edit_at\"\n      ],\n      table_sorting  : null,\n      busy           : false,\n      documents      : null, // Can be null (not loaded yet) or [] (no shared documents)\n      total_docs     : null\n    }\n\n    Object.assign(state, StoredUIState.load());\n    this.state = state;\n\n    this._profileOwner = (process.env.NODE_ENV === 'development') ? 'rainer' : window.location.pathname.substring(1);\n  }\n\n  componentDidMount() {\n    API\n      .fetchPublicAccountInfo(this._profileOwner)\n      .then(r => this.setState({ visitedAccount: r.data }));\n\n    API\n      .fetchLoginStatus()\n      .then(r => this.setState({ me: r.data })); \n\n    this.reloadDocuments();\n  }\n\n  reloadDocuments() {\n    API\n      .fetchAccessibleDocuments(this._profileOwner, this.getDisplayConfig())\n      .then(r => this.setState({ \n        documents: r.data.items,\n        total_docs: r.data.total\n      }));\n  }\n\n  getDisplayConfig() {\n    if (this.state.presentation === 'GRID')\n      return; // No configs for grid view\n\n    return {\n      columns: Columns.expandAggregatedColumns(this.state.table_columns),\n      sort: this.state.table_sorting\n    };\n  }\n\n  onTogglePresentation(presentation) {\n    this.setState(before => { \n      const p = (before.presentation === 'TABLE') ? 'GRID' : 'TABLE';\n      StoredUIState.save('presentation', p);\n      return { presentation: p };\n    });\n  }\n\n  onChangeColumnPrefs(columns) {\n    StoredUIState.save('table_columns', columns);\n    this.setState({ table_columns: columns }, () => {\n      this.reloadDocuments();\n    });\n  }\n  \n  onSortTable(sorting) {\n    StoredUIState.save('table_sorting', sorting);\n    this.setState({ table_sorting: sorting }, () => {\n      this.reloadDocuments();\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <TopBar \n          me={this.state.me} />\n\n        <Sidebar \n          account={this.state.visitedAccount}/>\n\n        <div className=\"container\">\n          <Breadcrumbs\n            label=\"Public Documents\" \n            count={this.state.total_docs} />\n\n          <HeaderIcon\n            className=\"presentation-toggle stroke7\"\n            icon={(this.state.presentation === 'TABLE') ? '\\ue645' : '\\ue636'} \n            onClick={this.onTogglePresentation.bind(this)} />\n\n          {this.state.documents && this.state.visitedAccount && (\n              \n              this.state.documents.length === 0 ? \n                <div className=\"no-public-documents\">\n                  {this.state.visitedAccount.username} has not shared any documents yet\n                </div> :\n\n                this.state.presentation === 'TABLE' ?\n                  <TablePane\n                    folders={[]}\n                    documents={this.state.documents}\n                    columns={this.state.table_columns}\n                    sorting={this.state.table_sorting}\n                    busy={this.state.busy} \n                    disableFiledrop={true} \n                    onSort={this.onSortTable.bind(this)} \n                    onChangeColumnPrefs={this.onChangeColumnPrefs.bind(this)} /> \n                  :\n                  <GridPane\n                    folders={[]}\n                    documents={this.state.documents}\n                    busy={this.state.busy} \n                    disableFiledrop={true} />\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}